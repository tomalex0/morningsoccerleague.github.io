{"version":3,"sources":["webpack://morningsoccerleague.github.io/./src/components/msl/player/total-stats-item.js","webpack://morningsoccerleague.github.io/./src/components/msl/season/season-stats-item.js","webpack://morningsoccerleague.github.io/./src/graphql/lib/enum.js","webpack://morningsoccerleague.github.io/./src/graphql/lib/helpers.js","webpack://morningsoccerleague.github.io/./src/graphql/models/caution-stats.js","webpack://morningsoccerleague.github.io/./src/graphql/models/foul-stats.js","webpack://morningsoccerleague.github.io/./src/graphql/models/player-stats.js","webpack://morningsoccerleague.github.io/./src/graphql/models/season-stats.js","webpack://morningsoccerleague.github.io/./src/graphql/models/season-teams.js","webpack://morningsoccerleague.github.io/./src/graphql/models/stats-by-type.js","webpack://morningsoccerleague.github.io/./src/graphql/models/team-season-stats.js","webpack://morningsoccerleague.github.io/./src/graphql/models/team-stats.js"],"names":["icon","className","xmlns","fill","viewBox","stroke","aria-hidden","strokeLinecap","strokeLinejoin","strokeWidth","d","title","value","children","season","Link","to","seasonPath","season_id","season_year","fixturePath","seasonStats","games","teams","players","goals","fouls","owngoals","assists","unique_players_goals","yellow_cards","red_cards","exports","MslImgKey","PLAYER","TEAM","Cautions","YELLOW","RED","SCHEMA_TYPE_NAME","MslSeasonsJson","MslSchedulesJson","MslTeamsJson","MslPlayersJson","DEFUAULT_SCORES","played","won","lost","draw","goal_allowed","goal_scored","FIELD_NAMES","PLAYER_ID","PLAYER_MOS","PLAYER_OWNER","getSeasonStats","require","getSeasonTeams","getPlayerGoals","getPlayerAssists","getPlayerCautions","getPlayerMom","getPlayerSaves","getPlayerReferees","getTeamGoals","getTeamAssists","getTeamCautions","getTeamMom","getTeamSaves","getAllGameStatsByType","getTotalCautionType","schedules","cautionType","allStats","filter","item","caution_id","groupBy","predicate","getSum","getTeamSeasonFoulStats","teamList","map","gamestats","flat","team_id","team","groupTeam","teamListArr","Object","values","mappedData","newitem","teamItem","totalFouls","matches","length","teamName","foulAvg","toFixed","items","sort","name","reverse","getReferees","groupPlayers","data","playerGroup","player_id","player","sortPlayers","a","b","count","localeCompare","grouByPlayerStats","sortedData","keys","k","grouByPlayerStatsSum","key","allData","owngoal","assist","caution_type","getTotalChildArr","getTeamSeasonStats","seasons","seasonArr","totalGoals","totalMom","totalPlayers","totalAssists","totalOwnGoals","totalValidGoals","totalSaves","momPlayers","playersSaves","totalUniquePlayerGoals","Set","totalYellowCards","teamStandingStats","teamFoulStats","totalFoulsCount","reduce","totalRedCards","playerYellowCards","playerRedCards","playersScoredSort","unique_players_goals_list","scorers","moms","goalkeepers","yellow_card_holders","red_card_holders","team_standing_stats","team_foul_stats","seasonItem","isOwner","owners","find","owner","isMos","mos","Array","isArray","childitem","referees","getDefaultScore","teamObj","forEach","itemobj","home","away","homeTeamId","awayTeamId","completed","goal_diff","points","getTeamStandings","gameitem","team_type","teamId"],"mappings":"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","file":"85f9cf57847763a6ceb613593bf68a29226eb37b-4996bb41f9e9be8a1852.js","sourcesContent":["import React from \"react\"\nconst icon = (\n  <svg\n    className=\"flex-shrink-0 h-6 w-6 text-light-800 dark:text-dark-300\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n    fill=\"none\"\n    viewBox=\"0 0 24 24\"\n    stroke=\"currentColor\"\n    aria-hidden=\"true\"\n  >\n    <path\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth={2}\n      d=\"M9 19v-6a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2a2 2 0 002-2zm0 0V9a2 2 0 012-2h2a2 2 0 012 2v10m-6 0a2 2 0 002 2h2a2 2 0 002-2m0 0V5a2 2 0 012-2h2a2 2 0 012 2v14a2 2 0 01-2 2h-2a2 2 0 01-2-2z\"\n    />\n  </svg>\n)\nconst MslTotalStatsItem = ({ title, value, children = icon }) => {\n  return (\n    <div className=\"flex py-2 px-2 bg-dark_alt  dark:bg-dark-800  rounded-xl shadow-md items-center \">\n      <div>{children}</div>\n      <div className=\"ml-2 md:ml-4\">\n        <p className=\"text-base font-medium text-dark-900 dark:text-dark-300\">\n          {title}\n        </p>\n        <p className=\"mt-1 text-sm text-dark-500 dark:text-dark-400\">{value}</p>\n      </div>\n    </div>\n  )\n}\n\nexport default MslTotalStatsItem\n","import { Link } from \"gatsby\"\nimport React from \"react\"\nimport MslTotalStatsItem from \"components/msl/player/total-stats-item\"\n\nconst MslSeasonStatsItem = ({ season }) => {\n  return (\n    <div className=\"lg:flex lg:items-center lg:justify-between px-5\">\n      <div className=\"flex-1 min-w-0\">\n        <h1 className=\"text-2xl font-bold leading-7  sm:text-3xl sm:truncate\">\n          <Link\n            to={season.seasonPath}\n            className=\"text-dark-600 dark:text-dark-300 hover:text-light-800 dark:hover:text-dark-100\"\n          >\n            Season {season.season_id} ({season.season_year}) &rarr;\n          </Link>\n        </h1>\n        <div className=\"mt-4\">\n          <Link\n            to={season.fixturePath}\n            className=\"text-base font-medium  text-light-800 dark:text-dark-200 hover:text-dark-800 dark:hover:text-dark-100\"\n          >\n            Fixtures &rarr;\n          </Link>\n        </div>\n        <div className=\"mt-3 grid grid-cols-2 md:grid-cols-4 lg:grid-cols-5 xl:grid-cols-8 gap-4\">\n          <MslTotalStatsItem\n            title={`Games`}\n            value={season.seasonStats.games}\n          ></MslTotalStatsItem>\n          <MslTotalStatsItem\n            title={`Teams`}\n            value={season.seasonStats.teams}\n          ></MslTotalStatsItem>\n          <MslTotalStatsItem\n            title={`Players`}\n            value={season.seasonStats.players}\n          ></MslTotalStatsItem>\n          <MslTotalStatsItem\n            title={`Goals`}\n            value={season.seasonStats.goals}\n          ></MslTotalStatsItem>\n          <MslTotalStatsItem\n            title={`Fouls`}\n            value={season.seasonStats.fouls}\n          ></MslTotalStatsItem>\n          <MslTotalStatsItem\n            title={`Own Goals`}\n            value={season.seasonStats.owngoals}\n          ></MslTotalStatsItem>\n          <MslTotalStatsItem\n            title={`Assists`}\n            value={season.seasonStats.assists}\n          ></MslTotalStatsItem>\n          <MslTotalStatsItem\n            title={`Players Scored`}\n            value={season.seasonStats.unique_players_goals}\n          ></MslTotalStatsItem>\n          <MslTotalStatsItem\n            title={`Yellow Cards`}\n            value={season.seasonStats.yellow_cards}\n          ></MslTotalStatsItem>\n          <MslTotalStatsItem\n            title={`Red Cards`}\n            value={season.seasonStats.red_cards}\n          ></MslTotalStatsItem>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default MslSeasonStatsItem\n","exports.MslImgKey = {\n  PLAYER: \"players\",\n  TEAM: \"teams\",\n}\nexports.Cautions = {\n  YELLOW: 1,\n  RED: 2,\n}\n\nexports.SCHEMA_TYPE_NAME = {\n  MslSeasonsJson: \"MslSeasonsJson\",\n  MslSchedulesJson: \"MslSchedulesJson\",\n  MslTeamsJson: \"MslTeamsJson\",\n  MslPlayersJson: \"MslPlayersJson\",\n}\n\nexports.DEFUAULT_SCORES = {\n  played: 0,\n  won: 0,\n  lost: 0,\n  draw: 0,\n  goal_allowed: 0,\n  goal_scored: 0,\n}\n\nexports.FIELD_NAMES = {\n  PLAYER_ID: \"player_id\",\n  PLAYER_MOS: \"isMos\",\n  PLAYER_OWNER: \"isOwner\",\n}\n","const { getSeasonStats } = require(\"../models/season-stats\")\nconst { getSeasonTeams } = require(\"../models/season-teams\")\nconst {\n  getPlayerGoals,\n  getPlayerAssists,\n  getPlayerCautions,\n  getPlayerMom,\n  getPlayerSaves,\n  getPlayerReferees,\n} = require(\"../models/player-stats\")\n\nconst {\n  getTeamGoals,\n  getTeamAssists,\n  getTeamCautions,\n  getTeamMom,\n  getTeamSaves,\n} = require(\"../models/team-stats\")\n/**\n * Generic Function to get file info based on relative path\n * @param context\n * @param path\n * @returns {*}\n */\nfunction getFile(context, path) {\n  const data = context.nodeModel.getAllNodes({ type: `File` })\n  const record = data.find(item => item.relativePath == path)\n  return record\n}\nexports.getFile = getFile\n\nfunction getCurrentSeason(context) {\n  // If queried in context of season\n  const rootNodes = context.nodeModel.nodeModel._trackedRootNodes\n  const seasons = context.nodeModel.getAllNodes({ type: `MslSeasonsJson` })\n  const seasonIdArr = seasons.map(item => item.id)\n  const nodeArr = [...rootNodes]\n  const currSeasonId = nodeArr.find(item => seasonIdArr.includes(item))\n  const season = context.nodeModel.getNodeById({\n    id: currSeasonId,\n  })\n  return season\n}\n\nexports.getCurrentSeason = getCurrentSeason\n\nexports.getPlayerGoals = getPlayerGoals\n\nexports.getPlayerAssists = getPlayerAssists\n\nexports.getPlayerCautions = getPlayerCautions\n\nexports.getPlayerMom = getPlayerMom\n\nexports.getPlayerSaves = getPlayerSaves\n\nexports.getSeasonStats = getSeasonStats\n\nexports.getSeasonTeams = getSeasonTeams\n\nexports.getTeamGoals = getTeamGoals\n\nexports.getTeamAssists = getTeamAssists\n\nexports.getTeamCautions = getTeamCautions\n\nexports.getTeamMom = getTeamMom\n\nexports.getTeamSaves = getTeamSaves\n\nexports.getPlayerReferees = getPlayerReferees\n","const { getAllGameStatsByType } = require(\"./stats-by-type\")\n\nfunction getTotalCautionType(schedules, cautionType = 1) {\n  const allStats = getAllGameStatsByType(schedules, \"cautions\").filter(\n    item => item && item.caution_id == cautionType\n  )\n  return allStats\n}\nexports.getTotalCautionType = getTotalCautionType\n","const { groupBy, predicate, getSum } = require(\"../lib/utility\")\n\nfunction getTeamSeasonFoulStats(schedules) {\n  const teamList = schedules\n    .map(item => item.gamestats)\n    .flat()\n    .map(item => {\n      item.team_id = item.team.team_id\n      return item\n    })\n  const groupTeam = groupBy(teamList, \"team_id\")\n  const teamListArr = Object.values(groupTeam)\n  const mappedData = teamListArr.map(item => {\n    const newitem = {}\n    const teamItem = item[0].team\n    const totalFouls = getSum(item, \"fouls\")\n    const matches = item.length\n    newitem.team = teamItem\n    newitem.teamName = teamItem.teamName\n    newitem.fouls = totalFouls\n    newitem.foulAvg = (totalFouls / matches).toFixed(2)\n    newitem.matches = matches\n    newitem.items = item\n    return newitem\n  })\n  mappedData.sort(\n    predicate(\n      {\n        name: \"fouls\",\n        reverse: false,\n      },\n      {\n        name: \"teamName\",\n        reverse: false,\n      }\n    )\n  )\n  return mappedData\n}\n\nexports.getTeamSeasonFoulStats = getTeamSeasonFoulStats\n","const { groupBy, getSum } = require(\"../lib/utility\")\nconst { getAllGameStatsByType, getReferees } = require(\"./stats-by-type\")\nconst { getTotalCautionType } = require(\"./caution-stats\")\n\nfunction groupPlayers(data) {\n  const playerGroup = groupBy(\n    data.map(item => {\n      item.player_id = item.player.player_id\n      return item\n    }),\n    \"player_id\"\n  )\n  return playerGroup\n}\n\nfunction sortPlayers(data) {\n  return data.sort(function (a, b) {\n    return b.count - a.count || a.name.localeCompare(b.name)\n  })\n}\n\nfunction grouByPlayerStats(data) {\n  const playerGroup = groupPlayers(data)\n  const sortedData = Object.keys(playerGroup).map(function (k) {\n    return {\n      ...playerGroup[k][0].player,\n      count: playerGroup[k].length,\n      team: playerGroup[k][0].team,\n      value: playerGroup[k],\n    }\n  })\n\n  return sortPlayers(sortedData)\n}\n\nexports.grouByPlayerStats = grouByPlayerStats\n\nfunction grouByPlayerStatsSum(data, key) {\n  const playerGroup = groupPlayers(data)\n  const sortedData = Object.keys(playerGroup).map(function (k) {\n    return {\n      ...playerGroup[k][0].player,\n      count: getSum(playerGroup[k], key),\n      matches: playerGroup[k].length,\n      team: playerGroup[k][0].team,\n      value: playerGroup[k],\n    }\n  })\n\n  return sortPlayers(sortedData)\n}\n\nexports.grouByPlayerStatsSum = grouByPlayerStatsSum\n\nfunction getPlayerGoals(schedules, player_id) {\n  const allData = getAllGameStatsByType(schedules, \"goals\")\n  return allData.filter(item => !item.owngoal && item.player == player_id)\n}\nexports.getPlayerGoals = getPlayerGoals\n\nfunction getPlayerAssists(schedules, player_id) {\n  const allData = getAllGameStatsByType(schedules, \"goals\")\n  return allData.filter(item => item.assist == player_id)\n}\nexports.getPlayerAssists = getPlayerAssists\n\nfunction getPlayerCautions(schedules, player_id, caution_type) {\n  const allData = getTotalCautionType(schedules, caution_type)\n  return allData.filter(item => item.player == player_id)\n}\nexports.getPlayerCautions = getPlayerCautions\n\nfunction getPlayerMom(schedules, player_id) {\n  const allData = getAllGameStatsByType(schedules, \"mom\")\n  return allData.filter(item => item.player == player_id)\n}\nexports.getPlayerMom = getPlayerMom\n\nfunction getPlayerSaves(schedules, player_id) {\n  const allData = getAllGameStatsByType(schedules, \"keeper\")\n  return allData.filter(item => item.player == player_id)\n}\nexports.getPlayerSaves = getPlayerSaves\n\nfunction getPlayerReferees(schedules, player_id) {\n  const allData = getReferees(schedules)\n  return allData.filter(item => item.player == player_id)\n}\nexports.getPlayerReferees = getPlayerReferees\n","const { getTotalChildArr } = require(\"../lib/utility\")\nconst { grouByPlayerStats, grouByPlayerStatsSum } = require(\"./player-stats\")\nconst { getTotalCautionType } = require(\"./caution-stats\")\nconst { getAllGameStatsByType } = require(\"./stats-by-type\")\nconst { getTeamSeasonFoulStats } = require(\"./foul-stats\")\nconst { getTeamSeasonStats } = require(\"./team-season-stats\")\nconst { Cautions } = require(\"../lib/enum\")\n\nfunction getSeasonStats(seasons) {\n  const seasonArr = seasons.map(season => {\n    const totalGoals = getAllGameStatsByType(season.schedules, \"goals\")\n    const totalMom = getAllGameStatsByType(season.schedules, \"mom\")\n    const totalPlayers = getTotalChildArr(season.teams, \"players\")\n    const totalAssists = totalGoals.filter(item => item.assist)\n    const totalOwnGoals = totalGoals.filter(item => item.owngoal)\n    const totalValidGoals = totalGoals.filter(item => !item.owngoal)\n    const totalFouls = getAllGameStatsByType(season.schedules, \"fouls\")\n\n    const totalSaves = getAllGameStatsByType(season.schedules, \"keeper\")\n    // console.log(season.schedules, \"---season.schedules--\")\n\n    const momPlayers = grouByPlayerStats(totalMom)\n\n    const playersSaves = grouByPlayerStatsSum(totalSaves, \"saves\")\n\n    const totalUniquePlayerGoals = [\n      ...new Set(totalValidGoals.map(item => item.player.player_id)),\n    ]\n    const totalYellowCards = getTotalCautionType(\n      season.schedules,\n      Cautions.YELLOW\n    )\n    const teamStandingStats = getTeamSeasonStats(season.schedules, season.teams)\n    const teamFoulStats = getTeamSeasonFoulStats(season.schedules)\n\n    const totalFoulsCount = totalFouls.reduce((a, b) => a + b, 0)\n    const totalRedCards = getTotalCautionType(season.schedules, Cautions.RED)\n    const playerYellowCards = grouByPlayerStats(totalYellowCards)\n    const playerRedCards = grouByPlayerStats(totalRedCards)\n\n    const playersScoredSort = grouByPlayerStats(totalValidGoals)\n    season.seasonStats = {\n      games: season.schedules.length,\n      teams: season.teams.length,\n      goals: totalGoals.length,\n      assists: totalAssists.length,\n      players: totalPlayers,\n      owngoals: totalOwnGoals.length,\n      yellow_cards: totalYellowCards.length,\n      red_cards: totalRedCards.length,\n      unique_players_goals: totalUniquePlayerGoals.length,\n      unique_players_goals_list: totalUniquePlayerGoals,\n      fouls: totalFoulsCount,\n      scorers: playersScoredSort,\n      moms: momPlayers,\n      goalkeepers: playersSaves,\n      yellow_card_holders: playerYellowCards,\n      red_card_holders: playerRedCards,\n      team_standing_stats: teamStandingStats,\n      team_foul_stats: teamFoulStats,\n    }\n    return season\n  })\n  return seasonArr\n}\n\nexports.getSeasonStats = getSeasonStats\n","const { predicate } = require(\"../lib/utility\")\nfunction getSeasonTeams(seasonItem) {\n  const teams = seasonItem.teams\n    .map(item => {\n      item.teamName = item.team.teamName\n      item.players.map(newitem => {\n        newitem.isOwner = +!!item.owners.find(\n          owner => owner.player_id == newitem.player_id\n        )\n        newitem.isMos = +!!seasonItem.mos.find(\n          mos => mos.player_id == newitem.player_id\n        )\n        return newitem\n      })\n      item.players = item.players.sort(\n        predicate(\n          {\n            name: \"isOwner\",\n            reverse: true,\n          },\n          {\n            name: \"isMos\",\n            reverse: true,\n          },\n          {\n            name: \"name\",\n            reverse: false,\n          }\n        )\n      )\n      return item\n    })\n    .sort(\n      predicate({\n        name: \"teamName\",\n        reverse: false,\n      })\n    )\n  return teams\n}\n\nexports.getSeasonTeams = getSeasonTeams\n","function getAllGameStatsByType(schedules, key) {\n  const allStats = schedules\n    .map(item => item.gamestats)\n    .flat()\n    .map(item =>\n      item[key] && Array.isArray(item[key])\n        ? item[key].map(childitem => {\n            childitem.team = item.team\n            return childitem\n          })\n        : item[key]\n    )\n    .flat()\n    .filter(item => item)\n  return allStats\n}\n\nexports.getAllGameStatsByType = getAllGameStatsByType\n\nfunction getReferees(schedules) {\n  const allData = schedules.map(item => item.referees).flat()\n  return allData\n}\nexports.getReferees = getReferees\n","const { DEFUAULT_SCORES } = require(\"../lib/enum\")\nconst { predicate, getDefaultScore } = require(\"../lib/utility\")\n\nfunction getTeamSeasonStats(schedules, teams) {\n  var teamObj = {}\n  // Set default object for each team\n  teams.forEach(item => {\n    teamObj[item.team.team_id] = getDefaultScore()\n    teamObj[item.team.team_id].team = item.team\n  })\n  schedules.forEach(itemobj => {\n    const home = itemobj.home\n    const away = itemobj.away\n    const homeTeamId = home?.team?.team_id\n    const awayTeamId = away?.team?.team_id\n\n    // if game is completed\n    if (itemobj.completed) {\n      teamObj[homeTeamId].played += 1\n      teamObj[awayTeamId].played += 1\n\n      if (home.goals.length == away.goals.length) {\n        teamObj[homeTeamId].draw += 1\n        teamObj[awayTeamId].draw += 1\n      } else if (home.goals.length > away.goals.length) {\n        teamObj[homeTeamId].won += 1\n        teamObj[awayTeamId].lost += 1\n      } else if (away.goals.length > home.goals.length) {\n        teamObj[awayTeamId].won += 1\n        teamObj[homeTeamId].lost += 1\n      }\n      teamObj[homeTeamId].goal_allowed += away.goals.length\n      teamObj[awayTeamId].goal_allowed += home.goals.length\n\n      teamObj[homeTeamId].goal_scored += home.goals.length\n      teamObj[awayTeamId].goal_scored += away.goals.length\n    }\n  })\n  teamObj = Object.values(teamObj)\n  teamObj = teamObj.map(itemobj => {\n    itemobj.goal_diff = itemobj.goal_scored - itemobj.goal_allowed\n    itemobj.points = itemobj.draw * 1 + itemobj.won * 3\n    return itemobj\n  })\n  teamObj.sort(\n    predicate(\n      {\n        name: \"points\",\n        reverse: true,\n      },\n      {\n        name: \"goal_diff\",\n        reverse: true,\n      },\n      {\n        name: \"goal_scored\",\n        reverse: true,\n      },\n      {\n        name: \"teamName\",\n        reverse: false,\n      }\n    )\n  )\n  return Object.values(teamObj)\n}\n\nexports.getTeamSeasonStats = getTeamSeasonStats\n\nfunction getTeamStandings(schedules, teams) {\n  var teamObj = {}\n  teams.forEach(item => {\n    teamObj[item] = getDefaultScore()\n  })\n  schedules.forEach(itemobj => {\n    const home = itemobj.gamestats.find(\n      gameitem => gameitem.team_type == \"home\"\n    )\n    const away = itemobj.gamestats.find(\n      gameitem => gameitem.team_type == \"away\"\n    )\n    const homeTeamId = home?.team\n    const awayTeamId = away?.team\n\n    // if game is completed\n    if (itemobj.completed) {\n      teamObj[homeTeamId].played += 1\n      teamObj[awayTeamId].played += 1\n\n      if (home.goals.length == away.goals.length) {\n        teamObj[homeTeamId].draw += 1\n        teamObj[awayTeamId].draw += 1\n      } else if (home.goals.length > away.goals.length) {\n        teamObj[homeTeamId].won += 1\n        teamObj[awayTeamId].lost += 1\n      } else if (away.goals.length > home.goals.length) {\n        teamObj[awayTeamId].won += 1\n        teamObj[homeTeamId].lost += 1\n      }\n      teamObj[homeTeamId].goal_allowed += away.goals.length\n      teamObj[awayTeamId].goal_allowed += home.goals.length\n\n      teamObj[homeTeamId].goal_scored += home.goals.length\n      teamObj[awayTeamId].goal_scored += away.goals.length\n    }\n  })\n  return teamObj\n}\n\nexports.getTeamStandings = getTeamStandings\n","const { getAllGameStatsByType } = require(\"./stats-by-type\")\nconst { getTotalCautionType } = require(\"./caution-stats\")\n\nfunction getTeamGoals(schedules, teamId) {\n  const allData = getAllGameStatsByType(schedules, \"goals\")\n  return allData.filter(item => !item.owngoal && item.team == teamId)\n}\nexports.getTeamGoals = getTeamGoals\n\nfunction getTeamAssists(schedules, teamId) {\n  const allData = getAllGameStatsByType(schedules, \"goals\")\n  return allData.filter(item => item.assist && item.team == teamId)\n}\nexports.getTeamAssists = getTeamAssists\n\nfunction getTeamCautions(schedules, teamId, caution_type) {\n  const allData = getTotalCautionType(schedules, caution_type)\n  return allData.filter(item => item.team == teamId)\n}\nexports.getTeamCautions = getTeamCautions\n\nfunction getTeamMom(schedules, teamId) {\n  const allData = getAllGameStatsByType(schedules, \"mom\")\n  return allData.filter(item => item.team == teamId)\n}\nexports.getTeamMom = getTeamMom\n\nfunction getTeamSaves(schedules, teamId) {\n  const allData = getAllGameStatsByType(schedules, \"keeper\")\n  return allData.filter(item => item.team == teamId)\n}\nexports.getTeamSaves = getTeamSaves\n"],"sourceRoot":""}