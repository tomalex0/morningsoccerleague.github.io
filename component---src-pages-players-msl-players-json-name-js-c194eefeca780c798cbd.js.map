{"version":3,"sources":["webpack:///./src/pages/players/{MslPlayersJson.name}.js"],"names":["Player","data","path","player","seasonGrouped","groupBy","playerStats","seasonStats","title","name","player_id","allseasonStats","goals","assists","style","maxWidth","marginBottom","seasons","map","season","key","season_id","to","seasonPath","season_year","isOwner","team","teamName","isMos"],"mappings":"8FAAA,wGAoFeA,UArEf,SAASA,OAAT,GAAiC,IAAfC,EAAc,EAAdA,KAAMC,EAAQ,EAARA,KACdC,EAAWF,EAAXE,OAEFC,EAAgBC,kBAAQF,EAAOG,YAAYC,YAAa,aAC9D,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKC,MAAOL,EAAOM,KAAMP,KAAMA,IAC/B,yCACaC,EAAOM,KADpB,MAC6BN,EAAOO,WAEpC,6BACE,8BACGP,EAAOG,YAAYK,eAAeC,MADrC,mBAEGT,EAAOG,YAAYK,eAAeE,QAFrC,mBAKF,yBAAKC,MAAO,CAAEC,SAAS,QAAUC,aAAa,YAC5C,kBAAC,IAAD,OAEF,4BACGb,EAAOc,QAAQC,KAAI,SAAAC,GAAM,OACxB,wBAAIC,IAAKD,EAAOE,WACd,kBAAC,OAAD,CAAMC,GAAIH,EAAOI,YACdJ,EAAOE,UADV,IACsBF,EAAOK,aAE5BpB,EAAce,EAAOE,WAAW,GAAGI,SAClC,0CAEF,oCAAUrB,EAAce,EAAOE,WAAW,GAAGT,MAA7C,UACA,oCACMR,EAAce,EAAOE,WAAW,GAAGK,KAAKC,SAD9C,SAGA,oCAAUvB,EAAce,EAAOE,WAAW,GAAGR,QAA7C,WAECM,EAAOS,OAAS","file":"component---src-pages-players-msl-players-json-name-js-c194eefeca780c798cbd.js","sourcesContent":["import React from \"react\"\nimport { graphql, Link } from \"gatsby\"\n\nimport Layout from \"components/layout\"\nimport Image from \"components/image\"\nimport SEO from \"components/seo\"\n\nimport {\n  MslPlayersJsonFragment,\n  MslTeamsJsonFragment,\n  MslSeasonsJsonFragment,\n} from \"data/fragments\"\n\nimport { groupBy } from \"../../../graphql/lib/helpers\"\n\nfunction Player({ data, path }) {\n  const { player } = data\n\n  const seasonGrouped = groupBy(player.playerStats.seasonStats, \"season_id\")\n  return (\n    <Layout>\n      <SEO title={player.name} path={path} />\n      <h1>\n        Hi Player {player.name} - {player.player_id}\n      </h1>\n      <div>\n        <span>\n          {player.playerStats.allseasonStats.goals} Total Goals ---\n          {player.playerStats.allseasonStats.assists} Total Assists\n        </span>\n      </div>\n      <div style={{ maxWidth: `300px`, marginBottom: `1.45rem` }}>\n        <Image />\n      </div>\n      <ul>\n        {player.seasons.map(season => (\n          <li key={season.season_id}>\n            <Link to={season.seasonPath}>\n              {season.season_id}-{season.season_year}\n            </Link>\n            {seasonGrouped[season.season_id][0].isOwner && (\n              <span>---Owner</span>\n            )}\n            <span>---{seasonGrouped[season.season_id][0].goals} Goals</span>\n            <span>\n              ---{seasonGrouped[season.season_id][0].team.teamName} Team\n            </span>\n            <span>---{seasonGrouped[season.season_id][0].assists} Assist</span>\n            {/*<span>---{season.playerInfo.team.teamName}</span>*/}\n            {season.isMos && <span>---Mos</span>}\n          </li>\n        ))}\n      </ul>\n    </Layout>\n  )\n}\n\nexport const query = graphql`\n  query($id: String) {\n    player: mslPlayersJson(id: { eq: $id }) {\n      ...MslPlayersJsonFragment\n      playerStats {\n        ...MslPlayerStatsFragment\n      }\n      seasons {\n        ...MslSeasonsJsonFragment\n        season_id\n        isMos\n\n        schedules {\n          gamestats {\n            goals {\n              player {\n                player_id\n              }\n              owngoal\n            }\n          }\n        }\n      }\n    }\n  }\n`\n\nexport default Player\n"],"sourceRoot":""}