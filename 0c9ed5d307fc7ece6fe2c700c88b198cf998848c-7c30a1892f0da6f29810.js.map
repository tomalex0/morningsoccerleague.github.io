{"version":3,"sources":["webpack://morningsoccerleague.github.io/./src/data/fragments.js","webpack://morningsoccerleague.github.io/./src/graphql/lib/utility.js"],"names":["exports","predicate","field","name","cmp","fields","n_fields","arguments","length","default_cmp","a","b","getCmpFunc","primer","reverse","dfc","i","push","A","B","result","propComparator","sortBy","direction","toString","getTotalChildArr","itemArr","prop","sum","map","item","preapareDateString","val","dateVal","replace","groupBy","xs","key","reduce","rv","x","getSum","data","getDefaultScore","defaultScore","played","won","lost","draw","goal_allowed","goal_scored","jsonArrayColumnSum","jsonArr","propArr","sums","obj","Object","keys","s","k","getInitials","str","size","split","n","slice","join","formatDateString","locale","Date","toLocaleDateString","weekday","year","month","day"],"mappings":"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","file":"0c9ed5d307fc7ece6fe2c700c88b198cf998848c-7c30a1892f0da6f29810.js","sourcesContent":["import { graphql } from \"gatsby\"\n\nexport const MslPlayersJsonFragment = graphql`\n  fragment MslPlayersJsonFragment on MslPlayersJson {\n    name\n    player_id\n    playerPath: gatsbyPath(filePath: \"/players/{MslPlayersJson.name}\")\n  }\n`\nexport const MslTeamStatsFragment = graphql`\n  fragment MslTeamStatsFragment on MslTeamStats {\n    allseasonStats {\n      assists\n      goals\n      mom\n      mos\n      players\n      red_cards\n      saves\n      yellow_cards\n      matches\n      won\n      lost\n      draw\n      goal_allowed\n    }\n    seasonStats {\n      assists\n      goals\n      mom\n      mos\n      red_cards\n      players\n      saves\n      season_id\n      yellow_cards\n      matches\n      won\n      lost\n      draw\n      goal_allowed\n      season {\n        ...MslSeasonsJsonFragment\n      }\n    }\n  }\n`\nexport const MslPlayerStatsFragment = graphql`\n  fragment MslPlayerStatsFragment on MslPlayerStats {\n    allseasonStats {\n      goals\n      assists\n      yellow_cards\n      red_cards\n      mos\n      mom\n      saves\n      referees\n    }\n    seasonStats {\n      isOwner\n      isMos\n      goals\n      assists\n      yellow_cards\n      red_cards\n      referees\n      mom\n      saves\n      season_id\n      season {\n        ...MslSeasonsJsonFragment\n      }\n      team {\n        ...MslTeamsJsonFragment\n      }\n    }\n  }\n`\n\n// imagedata: image {\n//   childImageSharp {\n//     gatsbyImageData(maxWidth: 100, layout: FLUID, placeholder: TRACED_SVG)\n//   }\n// }\nexport const MslTeamsJsonFragment = graphql`\n  fragment MslTeamsJsonFragment on MslTeamsJson {\n    team_id\n    teamName\n    teamCls\n    image {\n      name\n      relativePath\n      publicURL\n    }\n    teamPath: gatsbyPath(filePath: \"/teams/{MslTeamsJson.teamName}\")\n  }\n`\nexport const MslCautionJsonFragment = graphql`\n  fragment MslCautionJsonFragment on MslCautionJson {\n    name\n    caution_id\n    cls\n  }\n`\n\nexport const MslSchedulesJsonRefereesFragment = graphql`\n  fragment MslSchedulesJsonRefereesFragment on MslSchedulesJsonReferees {\n    player {\n      ...MslPlayersJsonFragment\n    }\n    team {\n      ...MslTeamsJsonFragment\n    }\n  }\n`\n\nexport const MslSeasonsJsonFragment = graphql`\n  fragment MslSeasonsJsonFragment on MslSeasonsJson {\n    season_year\n    season_id\n    season\n    seasonPath: gatsbyPath(\n      filePath: \"/seasons/{MslSeasonsJson.season_id}-{MslSeasonsJson.season_year}\"\n    )\n    fixturePath: gatsbyPath(\n      filePath: \"/seasons/{MslSeasonsJson.season_id}-{MslSeasonsJson.season_year}/fixtures\"\n    )\n  }\n`\nexport const MslSchedulesJsonGamestatsFragment = graphql`\n  fragment MslSchedulesJsonGamestatsFragment on MslSchedulesJsonGamestats {\n    mom {\n      player {\n        ...MslPlayersJsonFragment\n      }\n    }\n    team {\n      ...MslTeamsJsonFragment\n    }\n    fouls\n    goals {\n      minute\n      owngoal\n      penalty\n      extra_min\n      player {\n        ...MslPlayersJsonFragment\n      }\n      assist {\n        ...MslPlayersJsonFragment\n      }\n    }\n    keeper {\n      saves\n      player {\n        ...MslPlayersJsonFragment\n      }\n    }\n    cautions {\n      player {\n        ...MslPlayersJsonFragment\n      }\n      minute\n      extra_min\n      caution {\n        ...MslCautionJsonFragment\n      }\n    }\n  }\n`\n\nexport const MslGameStatsFragment = graphql`\n  fragment MslGameStatsFragment on MslSchedulesJsonGamestats {\n    team_type\n    goals {\n      minute\n      owngoal\n      player {\n        ...MslPlayersJsonFragment\n      }\n      assist {\n        ...MslPlayersJsonFragment\n      }\n    }\n    team {\n      ...MslTeamsJsonFragment\n    }\n    fouls\n    cautions {\n      minute\n      caution_id\n      player {\n        ...MslPlayersJsonFragment\n      }\n    }\n    mom {\n      player {\n        ...MslPlayersJsonFragment\n      }\n    }\n    keeper {\n      saves\n      player {\n        ...MslPlayersJsonFragment\n      }\n    }\n  }\n`\nexport const MslSeasonsJsonStatsFragment = graphql`\n  fragment MslSeasonsJsonStatsFragment on MslSeasonsJson {\n    ...MslSeasonsJsonFragment\n    schedules {\n      id\n      scheduled_date\n      scheduled_time\n      schedule_id\n      completed\n      referees {\n        ...MslSchedulesJsonRefereesFragment\n      }\n      gamestats {\n        ...MslGameStatsFragment\n      }\n      away: stats(stats_type: away) {\n        ...MslGameStatsFragment\n      }\n      home: stats(stats_type: home) {\n        ...MslGameStatsFragment\n      }\n    }\n    moslist {\n      player {\n        ...MslPlayersJsonFragment\n      }\n      team {\n        ...MslTeamsJsonFragment\n      }\n    }\n    mos {\n      ...MslPlayersJsonFragment\n      seasons {\n        ...MslSeasonsJsonFragment\n      }\n    }\n    teams {\n      players {\n        ...MslPlayersJsonFragment\n      }\n      team {\n        ...MslTeamsJsonFragment\n      }\n      owners {\n        ...MslPlayersJsonFragment\n      }\n    }\n  }\n`\n","/**\n * Generic\n * @returns {function(*, *): *}\n */\nfunction predicate() {\n  var fields = [],\n    n_fields = arguments.length,\n    field,\n    name,\n    reverse,\n    cmp\n\n  var default_cmp = function (a, b) {\n      if (a === b) return 0\n      return a < b ? -1 : 1\n    },\n    getCmpFunc = function (primer, reverse) {\n      var dfc = default_cmp,\n        // closer in scope\n        cmp = default_cmp\n      if (primer) {\n        cmp = function (a, b) {\n          return dfc(primer(a), primer(b))\n        }\n      }\n      if (reverse) {\n        return function (a, b) {\n          return -1 * cmp(a, b)\n        }\n      }\n      return cmp\n    }\n\n  // preprocess sorting options\n  for (var i = 0; i < n_fields; i++) {\n    field = arguments[i]\n    if (typeof field === \"string\") {\n      name = field\n      cmp = default_cmp\n    } else {\n      name = field.name\n      cmp = getCmpFunc(field.primer, field.reverse)\n    }\n    fields.push({\n      name: name,\n      cmp: cmp,\n    })\n  }\n\n  // final comparison function\n  return function (A, B) {\n    var a, b, name, result\n    for (var i = 0; i < n_fields; i++) {\n      result = 0\n      field = fields[i]\n      name = field.name\n\n      result = field.cmp(A[name], B[name])\n      if (result !== 0) break\n    }\n    return result\n  }\n}\n\nexports.predicate = predicate\n\n/**\n * Another json arryy sort, less performant than predicate\n * @param sortBy\n * @returns {function(*, *): number}\n */\nfunction propComparator(sortBy) {\n  return function (a, b) {\n    let i = 0,\n      result = 0\n    while (i < sortBy.length && result === 0) {\n      result =\n        sortBy[i].direction *\n        (a[sortBy[i].name].toString() < b[sortBy[i].name].toString()\n          ? -1\n          : a[sortBy[i].name].toString() > b[sortBy[i].name].toString()\n          ? 1\n          : 0)\n      i++\n    }\n    return result\n  }\n}\nexports.propComparator = propComparator\n\n/**\n * Generic\n * @param itemArr\n * @param prop\n * @returns {number}\n */\nfunction getTotalChildArr(itemArr, prop) {\n  let sum = 0\n  itemArr.map(item => {\n    sum += item[prop].length\n  })\n  return sum\n}\n\nexports.getTotalChildArr = getTotalChildArr\n\n/**\n * Generic\n * @param xs\n * @param key\n * @returns {*}\n */\nconst groupBy = function (xs, key) {\n  return xs.reduce(function (rv, x) {\n    ;(rv[x[key]] = rv[x[key]] || []).push(x)\n    return rv\n  }, {})\n}\nexports.groupBy = groupBy\n\n/**\n * Generic\n * @param data\n * @param key\n * @returns {*}\n */\nfunction getSum(data, key) {\n  return data.reduce(function (sum, item) {\n    return sum + item[key]\n  }, 0)\n}\nexports.getSum = getSum\n\nfunction getDefaultScore() {\n  var defaultScore = {\n    played: 0,\n    won: 0,\n    lost: 0,\n    draw: 0,\n    goal_allowed: 0,\n    goal_scored: 0,\n  }\n\n  return defaultScore\n}\nexports.getDefaultScore = getDefaultScore\n\nfunction jsonArrayColumnSum(jsonArr, propArr) {\n  return jsonArr.reduce(\n    (sums, obj) =>\n      Object.keys(obj).reduce((s, k) => {\n        k === \"id\" || (s[k] = (s[k] || 0) + +obj[k])\n        return s\n      }, sums),\n    {}\n  )\n}\n\nexports.jsonArrayColumnSum = jsonArrayColumnSum\n\nfunction getInitials(str, size = 2) {\n  return str\n    ?.split(\" \")\n    ?.map(n => n[0])\n    ?.slice(0, size)\n    ?.join(\"\")\n}\nexports.getInitials = getInitials\n\nfunction preapareDateString(val) {\n  // fix this craziness https://stackoverflow.com/a/31732581\n  const dateVal = val.replace(/-/g, \"/\")\n  return dateVal\n}\nexports.preapareDateString = preapareDateString\n\nfunction formatDateString(val, locale = \"en\") {\n  // fix this craziness https://stackoverflow.com/a/31732581\n  const dateVal = preapareDateString(val)\n  return new Date(dateVal).toLocaleDateString(locale, {\n    weekday: \"long\",\n    year: \"numeric\",\n    month: \"long\",\n    day: \"numeric\",\n  })\n}\n\nexports.formatDateString = formatDateString\n"],"sourceRoot":""}