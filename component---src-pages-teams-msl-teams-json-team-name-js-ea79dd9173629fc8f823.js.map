{"version":3,"sources":["webpack://morningsoccerleague.github.io/./src/components/msl/player/total-stats-item.js","webpack://morningsoccerleague.github.io/./src/components/msl/table/table-data-cell.js","webpack://morningsoccerleague.github.io/./src/components/msl/table/table-header-cell.js","webpack://morningsoccerleague.github.io/./src/components/msl/table/table.js","webpack://morningsoccerleague.github.io/./src/components/msl/team/team-image.js","webpack://morningsoccerleague.github.io/./src/components/msl/team/team-stats-item.js","webpack://morningsoccerleague.github.io/./src/data/fragments.js","webpack://morningsoccerleague.github.io/./src/components/msl/team/team-season-stats.js","webpack://morningsoccerleague.github.io/./src/pages/teams/{MslTeamsJson.teamName}.js"],"names":["icon","className","xmlns","fill","viewBox","stroke","aria-hidden","strokeLinecap","strokeLinejoin","strokeWidth","d","title","value","children","cssName","scope","props","team","publicImgUrl","image","publicURL","src","alt","teamName","stats","allSeasonStats","matches","won","draw","lost","goals","goal_allowed","players","mos","mom","assists","yellow_cards","red_cards","seasons","sort","a","b","season","season_id","map","index","Link","to","seasonPath","season_year","query","Team","path","data","seasonStats","teamStats","allseasonStats"],"mappings":"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","file":"component---src-pages-teams-msl-teams-json-team-name-js-ea79dd9173629fc8f823.js","sourcesContent":["import React from \"react\"\nconst icon = (\n  <svg\n    className=\"flex-shrink-0 h-6 w-6 text-light-800 dark:text-dark-300\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n    fill=\"none\"\n    viewBox=\"0 0 24 24\"\n    stroke=\"currentColor\"\n    aria-hidden=\"true\"\n  >\n    <path\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth={2}\n      d=\"M9 19v-6a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2a2 2 0 002-2zm0 0V9a2 2 0 012-2h2a2 2 0 012 2v10m-6 0a2 2 0 002 2h2a2 2 0 002-2m0 0V5a2 2 0 012-2h2a2 2 0 012 2v14a2 2 0 01-2 2h-2a2 2 0 01-2-2z\"\n    />\n  </svg>\n)\nconst MslTotalStatsItem = ({ title, value, children = icon }) => {\n  return (\n    <div className=\"flex py-2 px-2 bg-dark_alt  dark:bg-dark-800  rounded-xl shadow-md items-center \">\n      <div>{children}</div>\n      <div className=\"ml-2 md:ml-4\">\n        <p className=\"text-base font-medium text-dark-900 dark:text-dark-300\">\n          {title}\n        </p>\n        <p className=\"mt-1 text-sm text-dark-500 dark:text-dark-400\">{value}</p>\n      </div>\n    </div>\n  )\n}\n\nexport default MslTotalStatsItem\n","import React from \"react\"\n\nconst MslTableDataCell = ({ children }) => {\n  return (\n    <td\n      className={`px-2 py-2 whitespace-nowrap text-sm text-dark-500 dark:text-dark-900 break-words`}\n    >\n      {children}\n    </td>\n  )\n}\n\nexport default MslTableDataCell\n","import React from \"react\"\n\nconst MslTableHeaderCell = ({ children, cssName }) => {\n  return (\n    <th\n      scope=\"col\"\n      className={`px-2 py-2 text-left text-xs font-medium text-light-50 dark:text-dark-200 uppercase tracking-wider ${cssName}`}\n    >\n      {children}\n    </th>\n  )\n}\n\nexport default MslTableHeaderCell\n","import React from \"react\"\n\nconst MslTable = props => {\n  return (\n    <div className=\"flex flex-col\">\n      <div className=\"-my-2 overflow-x-auto sm:-mx-6 lg:-mx-8\">\n        <div className=\"py-2 align-middle inline-block min-w-full sm:px-6 lg:px-8\">\n          <div className=\"shadow overflow-hidden border-b border-dark-200 dark:border-dark-400 rounded-lg\">\n            <table className=\"min-w-full divide-y divide-dark-200 dark:divide-dark-400\">\n              <thead className=\"bg-light-800 dark:bg-dark-800\">\n                {props.children[0]}\n              </thead>\n              <tbody className=\"bg-dark_alt dark:bg-dark-300 divide-y divide-dark-200 dark:divide-dark-400\">\n                {props.children[1]}\n              </tbody>\n            </table>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default MslTable\n","import React from \"react\"\n// import { getImage } from \"gatsby-plugin-image\"\n\nconst MslTeamImg = ({ team, className }) => {\n  // const img = team?.imagedata\n  const publicImgUrl = team?.image?.publicURL\n  // <img className={className} src={publicImgUrl} alt={team.teamName} />\n  // const imageData = getImage(img)\n  return (\n    <div\n      className={`${className} bg-dark_alt overflow-hidden ring-1 ring-light-800 dark:ring-dark-900`}\n    >\n      <img src={publicImgUrl} alt={team.teamName} />\n    </div>\n  )\n}\n\nexport default MslTeamImg\n","import React from \"react\"\nimport MslTotalStatsItem from \"components/msl/player/total-stats-item\"\n\nconst MslTeamStatsItem = ({\n  stats,\n  cssName = \"mt-4 grid grid-cols-3 md:grid-cols-5 lg:grid-cols-7 xl:grid-cols-9 gap-4\",\n}) => {\n  const allSeasonStats = stats\n  return (\n    <div className={`${cssName}`}>\n      <MslTotalStatsItem\n        title={`Played`}\n        value={allSeasonStats.matches}\n      ></MslTotalStatsItem>\n      <MslTotalStatsItem\n        title={`Won`}\n        value={allSeasonStats.won}\n      ></MslTotalStatsItem>\n      <MslTotalStatsItem\n        title={`Drawn`}\n        value={allSeasonStats.draw}\n      ></MslTotalStatsItem>\n      <MslTotalStatsItem\n        title={`Lost`}\n        value={allSeasonStats.lost}\n      ></MslTotalStatsItem>\n      <MslTotalStatsItem\n        title={`For`}\n        value={allSeasonStats.goals}\n      ></MslTotalStatsItem>\n      <MslTotalStatsItem\n        title={`Against`}\n        value={allSeasonStats.goal_allowed}\n      ></MslTotalStatsItem>\n      <MslTotalStatsItem\n        title={`Players`}\n        value={allSeasonStats.players}\n      ></MslTotalStatsItem>\n      <MslTotalStatsItem\n        title={`Mos`}\n        value={allSeasonStats.mos}\n      ></MslTotalStatsItem>\n      <MslTotalStatsItem\n        title={`Mom`}\n        value={allSeasonStats.mom}\n      ></MslTotalStatsItem>\n      <MslTotalStatsItem\n        title={`Assists`}\n        value={allSeasonStats.assists}\n      ></MslTotalStatsItem>\n      <MslTotalStatsItem\n        title={`Yellow Cards`}\n        value={allSeasonStats.yellow_cards}\n      ></MslTotalStatsItem>\n      <MslTotalStatsItem\n        title={`Red Cards`}\n        value={allSeasonStats.red_cards}\n      ></MslTotalStatsItem>\n    </div>\n  )\n}\n\nexport default MslTeamStatsItem\n","import { graphql } from \"gatsby\"\n\nexport const MslPlayersJsonFragment = graphql`\n  fragment MslPlayersJsonFragment on MslPlayersJson {\n    name\n    player_id\n    playerPath: gatsbyPath(filePath: \"/players/{MslPlayersJson.name}\")\n  }\n`\nexport const MslTeamStatsFragment = graphql`\n  fragment MslTeamStatsFragment on MslTeamStats {\n    allseasonStats {\n      assists\n      goals\n      mom\n      mos\n      players\n      red_cards\n      saves\n      yellow_cards\n      matches\n      won\n      lost\n      draw\n      goal_allowed\n    }\n    seasonStats {\n      assists\n      goals\n      mom\n      mos\n      red_cards\n      players\n      saves\n      season_id\n      yellow_cards\n      matches\n      won\n      lost\n      draw\n      goal_allowed\n      season {\n        ...MslSeasonsJsonFragment\n      }\n    }\n  }\n`\nexport const MslPlayerStatsFragment = graphql`\n  fragment MslPlayerStatsFragment on MslPlayerStats {\n    allseasonStats {\n      goals\n      assists\n      yellow_cards\n      red_cards\n      mos\n      mom\n      saves\n      referees\n    }\n    seasonStats {\n      isOwner\n      isMos\n      goals\n      assists\n      yellow_cards\n      red_cards\n      referees\n      mom\n      saves\n      season_id\n      season {\n        ...MslSeasonsJsonFragment\n      }\n      team {\n        ...MslTeamsJsonFragment\n      }\n    }\n  }\n`\n\n// imagedata: image {\n//   childImageSharp {\n//     gatsbyImageData(maxWidth: 100, layout: FLUID, placeholder: TRACED_SVG)\n//   }\n// }\nexport const MslTeamsJsonFragment = graphql`\n  fragment MslTeamsJsonFragment on MslTeamsJson {\n    team_id\n    teamName\n    teamCls\n    image {\n      name\n      relativePath\n      publicURL\n    }\n    teamPath: gatsbyPath(filePath: \"/teams/{MslTeamsJson.teamName}\")\n  }\n`\nexport const MslCautionJsonFragment = graphql`\n  fragment MslCautionJsonFragment on MslCautionJson {\n    name\n    caution_id\n    cls\n  }\n`\n\nexport const MslSchedulesJsonRefereesFragment = graphql`\n  fragment MslSchedulesJsonRefereesFragment on MslSchedulesJsonReferees {\n    player {\n      ...MslPlayersJsonFragment\n    }\n    team {\n      ...MslTeamsJsonFragment\n    }\n  }\n`\n\nexport const MslSeasonsJsonFragment = graphql`\n  fragment MslSeasonsJsonFragment on MslSeasonsJson {\n    season_year\n    season_id\n    season\n    seasonPath: gatsbyPath(\n      filePath: \"/seasons/{MslSeasonsJson.season_id}-{MslSeasonsJson.season_year}\"\n    )\n    fixturePath: gatsbyPath(\n      filePath: \"/seasons/{MslSeasonsJson.season_id}-{MslSeasonsJson.season_year}/fixtures\"\n    )\n  }\n`\nexport const MslSchedulesJsonGamestatsFragment = graphql`\n  fragment MslSchedulesJsonGamestatsFragment on MslSchedulesJsonGamestats {\n    mom {\n      player {\n        ...MslPlayersJsonFragment\n      }\n    }\n    team {\n      ...MslTeamsJsonFragment\n    }\n    fouls\n    goals {\n      minute\n      owngoal\n      penalty\n      extra_min\n      player {\n        ...MslPlayersJsonFragment\n      }\n      assist {\n        ...MslPlayersJsonFragment\n      }\n    }\n    keeper {\n      saves\n      player {\n        ...MslPlayersJsonFragment\n      }\n    }\n    cautions {\n      player {\n        ...MslPlayersJsonFragment\n      }\n      minute\n      extra_min\n      caution {\n        ...MslCautionJsonFragment\n      }\n    }\n  }\n`\n\nexport const MslGameStatsFragment = graphql`\n  fragment MslGameStatsFragment on MslSchedulesJsonGamestats {\n    team_type\n    goals {\n      minute\n      owngoal\n      player {\n        ...MslPlayersJsonFragment\n      }\n      assist {\n        ...MslPlayersJsonFragment\n      }\n    }\n    team {\n      ...MslTeamsJsonFragment\n    }\n    fouls\n    cautions {\n      minute\n      caution_id\n      player {\n        ...MslPlayersJsonFragment\n      }\n    }\n    mom {\n      player {\n        ...MslPlayersJsonFragment\n      }\n    }\n    keeper {\n      saves\n      player {\n        ...MslPlayersJsonFragment\n      }\n    }\n  }\n`\nexport const MslSeasonsJsonStatsFragment = graphql`\n  fragment MslSeasonsJsonStatsFragment on MslSeasonsJson {\n    ...MslSeasonsJsonFragment\n    schedules {\n      id\n      scheduled_date\n      scheduled_time\n      schedule_id\n      completed\n      referees {\n        ...MslSchedulesJsonRefereesFragment\n      }\n      gamestats {\n        ...MslGameStatsFragment\n      }\n      away: stats(stats_type: away) {\n        ...MslGameStatsFragment\n      }\n      home: stats(stats_type: home) {\n        ...MslGameStatsFragment\n      }\n    }\n    moslist {\n      player {\n        ...MslPlayersJsonFragment\n      }\n      team {\n        ...MslTeamsJsonFragment\n      }\n    }\n    mos {\n      ...MslPlayersJsonFragment\n      seasons {\n        ...MslSeasonsJsonFragment\n      }\n    }\n    teams {\n      players {\n        ...MslPlayersJsonFragment\n      }\n      team {\n        ...MslTeamsJsonFragment\n      }\n      owners {\n        ...MslPlayersJsonFragment\n      }\n    }\n  }\n`\n","import { Link } from \"gatsby\"\nimport React from \"react\"\nimport MslTableDataCell from \"components/msl/table/table-data-cell\"\nimport MslTableHeaderCell from \"components/msl/table/table-header-cell\"\nimport MslTable from \"components/msl/table/table\"\n\nconst MslTeamSeasonStats = ({ seasons }) => {\n  seasons.sort((a, b) => a?.season?.season_id - b?.season?.season_id)\n  return (\n    <MslTable>\n      <>\n        <tr>\n          <MslTableHeaderCell>Season</MslTableHeaderCell>\n          <MslTableHeaderCell>#Played</MslTableHeaderCell>\n          <MslTableHeaderCell>#Won</MslTableHeaderCell>\n          <MslTableHeaderCell>#Drawn</MslTableHeaderCell>\n          <MslTableHeaderCell>#Lost</MslTableHeaderCell>\n          <MslTableHeaderCell>#For</MslTableHeaderCell>\n          <MslTableHeaderCell>#Against</MslTableHeaderCell>\n          <MslTableHeaderCell>#Players</MslTableHeaderCell>\n          <MslTableHeaderCell>#Mos</MslTableHeaderCell>\n          <MslTableHeaderCell>#Mom</MslTableHeaderCell>\n          <MslTableHeaderCell>#Assists</MslTableHeaderCell>\n          <MslTableHeaderCell> #Yellow Cards</MslTableHeaderCell>\n          <MslTableHeaderCell> #Red Cards</MslTableHeaderCell>\n        </tr>\n      </>\n      <>\n        {seasons.map((stats, index) => (\n          <tr>\n            <MslTableDataCell>\n              <Link to={stats.season.seasonPath}>\n                {stats.season.season} - {stats.season.season_year}\n              </Link>\n            </MslTableDataCell>\n            <MslTableDataCell>{stats.matches}</MslTableDataCell>\n            <MslTableDataCell>{stats.won}</MslTableDataCell>\n            <MslTableDataCell>{stats.draw}</MslTableDataCell>\n            <MslTableDataCell>{stats.lost}</MslTableDataCell>\n            <MslTableDataCell>{stats.goals}</MslTableDataCell>\n            <MslTableDataCell>{stats.goal_allowed}</MslTableDataCell>\n            <MslTableDataCell>{stats.players}</MslTableDataCell>\n            <MslTableDataCell>{stats.mos}</MslTableDataCell>\n            <MslTableDataCell>{stats.mom}</MslTableDataCell>\n            <MslTableDataCell>{stats.assists}</MslTableDataCell>\n            <MslTableDataCell>{stats.yellow_cards}</MslTableDataCell>\n            <MslTableDataCell>{stats.red_cards}</MslTableDataCell>\n          </tr>\n        ))}\n      </>\n    </MslTable>\n  )\n}\n\nexport default MslTeamSeasonStats\n","import React from \"react\"\nimport { graphql } from \"gatsby\"\n\nimport Layout from \"components/layout\"\nimport SEO from \"components/seo\"\nimport MslTeamSeasonStats from \"components/msl/team/team-season-stats\"\nimport MslTeamStatsItem from \"components/msl/team/team-stats-item\"\nimport MslTeamImg from \"components/msl/team/team-image\"\n\nimport {\n  MslTeamsJsonFragment,\n  MslSeasonsJsonStatsFragment,\n  MslTeamStatsFragment,\n} from \"data/fragments\"\n\nfunction Team({ path, data }) {\n  const { team } = data\n  const seasonStats = team?.teamStats?.seasonStats\n  const allSeasonStats = team?.teamStats?.allseasonStats\n\n  return (\n    <Layout>\n      <SEO title={team.teamName} path={path} />\n      <div className=\"lg:flex lg:items-center lg:justify-between px-5 mt-10\">\n        <div className=\"flex-1 min-w-0\">\n          <h1 className=\"text-2xl flex items-center font-bold leading-7 text-dark-600 dark:text-dark-300  sm:text-3xl sm:truncate p-2\">\n            <MslTeamImg\n              team={team}\n              className=\"block h-16 w-16 rounded-full sm:mx-0 sm:flex-shrink-0\"\n            />\n            <span className=\"pl-2\">{team.teamName}</span>\n          </h1>\n          <MslTeamStatsItem stats={allSeasonStats} />\n        </div>\n      </div>\n      <div className=\"mx-5 mt-5 pb-5 overflow-hidden\">\n        <div className=\"py-5\">\n          <h2 className=\"text-lg leading-6 font-medium text-dark-900 dark:text-dark-300\">\n            Seasons\n          </h2>\n        </div>\n        <MslTeamSeasonStats seasons={seasonStats} />\n      </div>\n    </Layout>\n  )\n}\n\nexport const query = graphql`\n  query($id: String) {\n    team: mslTeamsJson(id: { eq: $id }) {\n      ...MslTeamsJsonFragment\n      teamStats {\n        ...MslTeamStatsFragment\n      }\n      seasons {\n        ...MslSeasonsJsonStatsFragment\n      }\n    }\n  }\n`\n\nexport default Team\n"],"sourceRoot":""}