{"version":3,"sources":["webpack:///./src/pages/seasons/index.js","webpack:///./graphql/lib/enum.js"],"names":["Cautions","require","getTotalPlayers","getTotalGoals","getTotalCautionType","getMosDetails","SeasonsIndex","data","path","seasons","title","style","maxWidth","marginBottom","nodes","map","season","key","season_id","to","seasonPath","season_year","schedules","length","teams","YELLOW","RED","exports","MslImgKey","PLAYER","TEAM"],"mappings":"8FAAA,gFAOQA,GAPR,UAOqBC,EAAQ,QAArBD,U,EAMJC,EAAQ,QAJVC,E,EAAAA,gBACAC,E,EAAAA,cACAC,E,EAAAA,oB,EACAC,cA0EaC,UAjEM,SAAfA,aAAgB,GAAoB,IAAlBC,EAAiB,EAAjBA,KAAMC,EAAW,EAAXA,KACpBC,EAAYF,EAAZE,QACR,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKC,MAAM,UAAUF,KAAMA,IAC3B,0CACA,yBAAKG,MAAO,CAAEC,SAAS,QAAUC,aAAa,YAC5C,kBAAC,IAAD,OAEF,4BACGJ,EAAQK,MAAMC,KAAI,SAAAC,GAAM,OACvB,wBAAIC,IAAKD,EAAOE,WACd,kBAAC,OAAD,CAAMC,GAAIH,EAAOI,YACdJ,EAAOE,UADV,IACsBF,EAAOK,YAD7B,IAC2CL,EAAOM,UAAUC,OAAQ,IADpE,SAESP,EAAOQ,MAAMD,OAFtB,YAEuC,IACpCrB,EAAgBc,EAAOQ,OAH1B,cAG6C,IAC1CrB,EAAca,EAAOM,WAAWC,OAJnC,WAImD,IAChDnB,EAAoBY,EAAOM,UAAWtB,EAASyB,QAAQF,OAL1D,iBAMiB,IACdnB,EAAoBY,EAAOM,UAAWtB,EAAS0B,KAAKH,OAPvD,wB,mBCjCZI,EAAQC,UAAY,CAClBC,OAAQ,UACRC,KAAM,SAERH,EAAQ3B,SAAW,CACjByB,OAAQ,EACRC,IAAK","file":"component---src-pages-seasons-index-js-084eea1ad5a7c02fcd2a.js","sourcesContent":["import React from \"react\"\nimport { Link, graphql } from \"gatsby\"\n\nimport Layout from \"components/layout\"\nimport Image from \"components/image\"\nimport SEO from \"components/seo\"\n\nconst { Cautions } = require(\"../../../graphql/lib/enum\")\nconst {\n  getTotalPlayers,\n  getTotalGoals,\n  getTotalCautionType,\n  getMosDetails,\n} = require(\"../../../graphql/lib/helpers\")\n\nimport {\n  MslPlayersJsonFragment,\n  MslTeamsJsonFragment,\n  MslSeasonsJsonFragment,\n} from \"data/fragments\"\n\nconst SeasonsIndex = ({ data, path }) => {\n  const { seasons } = data\n  return (\n    <Layout>\n      <SEO title=\"Seasons\" path={path} />\n      <h1>Hi Seasons</h1>\n      <div style={{ maxWidth: `300px`, marginBottom: `1.45rem` }}>\n        <Image />\n      </div>\n      <ul>\n        {seasons.nodes.map(season => (\n          <li key={season.season_id}>\n            <Link to={season.seasonPath}>\n              {season.season_id}-{season.season_year}-{season.schedules.length}{\" \"}\n              Game--{season.teams.length} Teams --{\" \"}\n              {getTotalPlayers(season.teams)} Players --{\" \"}\n              {getTotalGoals(season.schedules).length}Goals --{\" \"}\n              {getTotalCautionType(season.schedules, Cautions.YELLOW).length}\n              Yellow Card --{\" \"}\n              {getTotalCautionType(season.schedules, Cautions.RED).length} Red\n              Card --\n              {/*{getMosDetails(season.mos, season.season_id).join(\",\")}{\" \"}*/}\n              {/*Mos -{\" \"}*/}\n            </Link>\n          </li>\n        ))}\n      </ul>\n    </Layout>\n  )\n}\n\nexport const query = graphql`\n  query {\n    seasons: allMslSeasonsJson(sort: { order: ASC, fields: season_id }) {\n      nodes {\n        ...MslSeasonsJsonFragment\n        schedules {\n          id\n          gamestats {\n            goals {\n              minute\n            }\n            cautions {\n              minute\n              caution_id\n            }\n          }\n        }\n        mos {\n          name\n          seasons {\n            isMos\n            season_id\n          }\n        }\n        teams {\n          players {\n            id\n          }\n        }\n      }\n    }\n  }\n`\n\nexport default SeasonsIndex\n","exports.MslImgKey = {\n  PLAYER: \"players\",\n  TEAM: \"teams\",\n}\nexports.Cautions = {\n  YELLOW: 1,\n  RED: 2,\n}\n"],"sourceRoot":""}