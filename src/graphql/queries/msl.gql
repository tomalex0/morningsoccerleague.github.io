enum ScheduleTeamStats {
  away
  home
}

type MslSeasonsJsonTeams {
  owners: [MslPlayersJson] @link(by: "player_id")
  players: [MslPlayersJson] @link(by: "player_id")
  # Team details for each team in the season
  team: MslTeamsJson @link(by: "team_id")
}

type MslSchedulesJsonGamestats {
		team: MslTeamsJson @link(by: "team_id")
}

type MslSchedulesJsonGamestatsMom {
		player: MslPlayersJson @link(by: "player_id")
}

type MslSchedulesJsonGamestatsGoals {
		assist: MslPlayersJson @link(by: "player_id")
		player: MslPlayersJson @link(by: "player_id")
}

type MslSchedulesJsonReferees {
	 player: MslPlayersJson @link(by: "player_id")
	 # value associated with `team` property will be linked with value of `team_id` in `MslTeamsJson`
  team: MslTeamsJson @link(by: "team_id")
}

type MslSchedulesJsonGamestatsKeeper {
		player: MslPlayersJson @link(by: "player_id")
}

type MslSchedulesJsonGamestatsPlayers {
		player: MslPlayersJson @link(by: "player_id")
}

type MslSchedulesJsonGamestatsCautions {
		caution: MslCautionJson @link(by: "caution_id", from: "caution_id")
		player: MslPlayersJson @link(by: "player_id")
}

type MslTeamSeasonStats {
		assists: Int
		goals: Int
		mom: Int
		mos: Int
  red_cards: Int
  saves: Int
  season: MslSeasonsJson @link(by: "season")
  players: Int
  season_id: Int
		yellow_cards: Int
		matches: Int
  won: Int
  lost: Int
  draw: Int
  goal_allowed: Int
}

type MslTeamAllSeasonStats {
		assists: Int
		goals: Int
		mom: Int
		mos: Int
		red_cards: Int
		saves: Int
		players: Int
		yellow_cards: Int
		matches: Int
  won: Int
  lost: Int
  draw: Int
  goal_allowed: Int
}

type MslTeamStats {
		allseasonStats: MslTeamAllSeasonStats
		seasonStats: [MslTeamSeasonStats]
}

type MslTeamsJson implements Node {
		image: File
  # List all seasons the team is part of
  seasons: [MslSeasonsJson] @link(by: "team.team_id", from: "team_id")
  teamStats: MslTeamStats
}

type MslPlayerSeasonStats {
		assists: Int
		goals: Int
		isOwner: Boolean
  isMos: Boolean
  mom: Int
  red_cards: Int
  saves: Int
  season: MslSeasonsJson @link(by: "season")
  season_id: Int
		team: MslTeamsJson @link(by: "team_id")
		yellow_cards: Int
		referees: Int
}

type MslPlayerAllSeasonStats {
		assists: Int
		goals: Int
		mom: Int
		mos: Int
		red_cards: Int
		saves: Int
		yellow_cards: Int
		referees: Int
}

type MslPlayerStats {
		allseasonStats: MslPlayerAllSeasonStats
		seasonStats: [MslPlayerSeasonStats]
}

type MslPlayersJson implements Node {
		image: File
		playerStats: MslPlayerStats
		seasons: [MslSeasonsJson]
		# isOwner: Boolean
		# isMos: Boolean
}

type MslSchedulesJson implements Node {
		# Schedule to Season Mapping
  season: MslSeasonsJson @link(by: "season")
  scheduled_time: String
  # custom field with filter capability to get stats of home & away
  stats(stats_type: ScheduleTeamStats): MslSchedulesJsonGamestats
}

#type MslSeasonStatsItem {
#		assists: Int
#		fouls: Int
#		mom: Int
#		red_cards: Int
#		saves: Int
#		yellow_cards: Int
#}
#
#type MslSeasonStats {
#		allseasonStats: MslSeasonStatsItem
#		seasonStats: [MslSeasonStatsItem]
#}


type MslSeasonsJson implements Node {
  mos: [MslPlayersJson] @link(by: "player_id")
  # Link back to schedule from season
  schedules: [MslSchedulesJson] @link(by: "season.season_id", from: "season_id")
}
