enum ScheduleTeamStats {
  home
  away
}

type MslSeasonsJsonTeams {
  owners: [MslPlayersJson] @link(by: "player_id")
  players: [MslPlayersJson] @link(by: "player_id")
  # Team details for each team in the season
  team: MslTeamsJson @link(by: "team_id")
}

type MslSchedulesJsonGamestats {
		team: MslTeamsJson @link(by: "team_id")
}

type MslSchedulesJsonGamestatsMom {
		player: [MslPlayersJson] @link(by: "player_id")
}

type MslSchedulesJsonGamestatsGoals {
		player: MslPlayersJson @link(by: "player_id")
  assist: MslPlayersJson @link(by: "player_id")
}

type MslSchedulesJsonReferees {
	 player: MslPlayersJson @link(by: "player_id")
	 # value associated with `team` property will be linked with value of `team_id` in `MslTeamsJson`
  team: MslTeamsJson @link(by: "team_id")
}

type MslSchedulesJsonGamestatsKeeper {
		player: MslPlayersJson @link(by: "player_id")
}

type MslSchedulesJsonGamestatsPlayers {
		player: [MslPlayersJson] @link(by: "player_id")
}

type MslSchedulesJsonGamestatsCautions {
		player: MslPlayersJson @link(by: "player_id")
  caution: MslCautionJson @link(by: "caution_id", from: "caution_id")
}

type MslTeamsJson implements Node {
  # List all seasons the team is part of
  seasons: [MslSeasonsJson] @link(by: "team.team_id", from: "team_id")
  image: File
}

type MslPlayerSeasonStats {
		team: MslTeamsJson @link(by: "team_id")
		season: MslSeasonsJson @link(by: "season")
		isOwner: Boolean
		isMos: Boolean
		goals: Int
		season_id: Int
		assists: Int
}

type MslPlayerAllSeasonStats {
		goals: Int
		assists: Int
}

type MslPlayerStats {
		allseasonStats: MslPlayerAllSeasonStats
		seasonStats: [MslPlayerSeasonStats]
}

type MslPlayersJson implements Node {
		image: File
		seasons: [MslSeasonsJson],
		playerStats: MslPlayerStats
}

type MslSchedulesJson implements Node {
		# Schedule to Season Mapping
  season: MslSeasonsJson @link(by: "season")
  # custom field with filter capability to get stats of home & away
  stats(stats_type: ScheduleTeamStats): MslSchedulesJsonGamestats
}


type MslSeasonsJson implements Node {
  mos: [MslPlayersJson] @link(by: "player_id")
  # Only meant to be used while viewing from context of player
  isMos: Boolean
  # Link back to schedule from season
  schedules: [MslSchedulesJson] @link(by: "season.season_id", from: "season_id")
}
