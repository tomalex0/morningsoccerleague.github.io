{"version":3,"sources":["webpack:///./src/components/msl/player/total-stats-item.js","webpack:///./src/graphql/models/player-stats.js","webpack:///./src/graphql/models/season-teams.js","webpack:///./src/graphql/models/season-stats.js","webpack:///./src/graphql/models/foul-stats.js","webpack:///./src/graphql/models/team-season-stats.js","webpack:///./src/components/msl/season/season-stats-item.js","webpack:///./src/graphql/models/caution-stats.js","webpack:///./src/graphql/lib/helpers.js","webpack:///./src/graphql/models/stats-by-type.js","webpack:///./src/graphql/models/team-stats.js","webpack:///./src/graphql/lib/enum.js"],"names":["icon","className","xmlns","fill","viewBox","stroke","aria-hidden","strokeLinecap","strokeLinejoin","strokeWidth","d","MslTotalStatsItem","title","value","children","groupBy","getSum","require","getAllGameStatsByType","getReferees","getTotalCautionType","groupPlayers","data","playerGroup","map","item","player_id","player","sortPlayers","sort","a","b","count","name","localeCompare","exports","grouByPlayerStats","sortedData","Object","keys","k","length","team","grouByPlayerStatsSum","key","matches","getPlayerGoals","schedules","allData","filter","owngoal","getPlayerAssists","assist","getPlayerCautions","caution_type","getPlayerMom","getPlayerSaves","getPlayerReferees","predicate","getSeasonTeams","seasonItem","teams","teamName","players","newitem","isOwner","owners","find","owner","isMos","mos","reverse","getTotalChildArr","getTeamSeasonFoulStats","getTeamSeasonStats","Cautions","getSeasonStats","seasons","seasonArr","season","totalGoals","totalMom","totalPlayers","totalAssists","totalOwnGoals","totalValidGoals","totalFouls","totalSaves","momPlayers","playersSaves","totalUniquePlayerGoals","Set","totalYellowCards","YELLOW","teamStandingStats","teamFoulStats","totalFoulsCount","reduce","totalRedCards","RED","playerYellowCards","playerRedCards","playersScoredSort","seasonStats","games","goals","assists","owngoals","yellow_cards","red_cards","unique_players_goals","unique_players_goals_list","fouls","scorers","moms","goalkeepers","yellow_card_holders","red_card_holders","team_standing_stats","team_foul_stats","teamList","gamestats","flat","team_id","groupTeam","teamListArr","values","mappedData","teamItem","foulAvg","toFixed","items","DEFUAULT_SCORES","getDefaultScore","teamObj","forEach","itemobj","home","away","homeTeamId","awayTeamId","completed","played","draw","won","lost","goal_allowed","goal_scored","goal_diff","points","getTeamStandings","gameitem","team_type","MslSeasonStatsItem","to","seasonPath","season_id","season_year","fixturePath","cautionType","allStats","caution_id","getTeamGoals","getTeamAssists","getTeamCautions","getTeamMom","getTeamSaves","getFile","context","path","nodeModel","getAllNodes","type","record","relativePath","getCurrentSeason","rootNodes","_trackedRootNodes","seasonIdArr","id","nodeArr","currSeasonId","s","includes","getNodeById","Array","isArray","childitem","referees","teamId","MslImgKey","PLAYER","TEAM","SCHEMA_TYPE_NAME","MslSeasonsJson","MslSchedulesJson","MslTeamsJson","MslPlayersJson","FIELD_NAMES","PLAYER_ID","PLAYER_MOS","PLAYER_OWNER"],"mappings":"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","file":"85f9cf57847763a6ceb613593bf68a29226eb37b-03d0e6443a53b7faa74a.js","sourcesContent":["import React from \"react\"\nconst icon = (\n  <svg\n    className=\"flex-shrink-0 h-6 w-6 text-light-800 dark:text-dark-300\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n    fill=\"none\"\n    viewBox=\"0 0 24 24\"\n    stroke=\"currentColor\"\n    aria-hidden=\"true\"\n  >\n    <path\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth={2}\n      d=\"M9 19v-6a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2a2 2 0 002-2zm0 0V9a2 2 0 012-2h2a2 2 0 012 2v10m-6 0a2 2 0 002 2h2a2 2 0 002-2m0 0V5a2 2 0 012-2h2a2 2 0 012 2v14a2 2 0 01-2 2h-2a2 2 0 01-2-2z\"\n    />\n  </svg>\n)\nconst MslTotalStatsItem = ({ title, value, children = icon }) => {\n  return (\n    <div className=\"flex py-2 px-2 bg-dark_alt  dark:bg-dark-800  rounded-xl shadow-md items-center \">\n      <div>{children}</div>\n      <div className=\"ml-2 md:ml-4\">\n        <p className=\"text-base font-medium text-dark-900 dark:text-dark-300\">\n          {title}\n        </p>\n        <p className=\"mt-1 text-sm text-dark-500 dark:text-dark-400\">{value}</p>\n      </div>\n    </div>\n  )\n}\n\nexport default MslTotalStatsItem\n","const { groupBy, getSum } = require(\"../lib/utility\")\nconst { getAllGameStatsByType, getReferees } = require(\"./stats-by-type\")\nconst { getTotalCautionType } = require(\"./caution-stats\")\n\nfunction groupPlayers(data) {\n  const playerGroup = groupBy(\n    data.map(item => {\n      item.player_id = item.player.player_id\n      return item\n    }),\n    \"player_id\"\n  )\n  return playerGroup\n}\n\nfunction sortPlayers(data) {\n  return data.sort(function (a, b) {\n    return b.count - a.count || a.name.localeCompare(b.name)\n  })\n}\n\nfunction grouByPlayerStats(data) {\n  const playerGroup = groupPlayers(data)\n  const sortedData = Object.keys(playerGroup).map(function (k) {\n    return {\n      ...playerGroup[k][0].player,\n      count: playerGroup[k].length,\n      team: playerGroup[k][0].team,\n      value: playerGroup[k],\n    }\n  })\n\n  return sortPlayers(sortedData)\n}\n\nexports.grouByPlayerStats = grouByPlayerStats\n\nfunction grouByPlayerStatsSum(data, key) {\n  const playerGroup = groupPlayers(data)\n  const sortedData = Object.keys(playerGroup).map(function (k) {\n    return {\n      ...playerGroup[k][0].player,\n      count: getSum(playerGroup[k], key),\n      matches: playerGroup[k].length,\n      team: playerGroup[k][0].team,\n      value: playerGroup[k],\n    }\n  })\n\n  return sortPlayers(sortedData)\n}\n\nexports.grouByPlayerStatsSum = grouByPlayerStatsSum\n\nfunction getPlayerGoals(schedules, player_id) {\n  const allData = getAllGameStatsByType(schedules, \"goals\")\n  return allData.filter(item => !item.owngoal && item.player == player_id)\n}\nexports.getPlayerGoals = getPlayerGoals\n\nfunction getPlayerAssists(schedules, player_id) {\n  const allData = getAllGameStatsByType(schedules, \"goals\")\n  return allData.filter(item => item.assist == player_id)\n}\nexports.getPlayerAssists = getPlayerAssists\n\nfunction getPlayerCautions(schedules, player_id, caution_type) {\n  const allData = getTotalCautionType(schedules, caution_type)\n  return allData.filter(item => item.player == player_id)\n}\nexports.getPlayerCautions = getPlayerCautions\n\nfunction getPlayerMom(schedules, player_id) {\n  const allData = getAllGameStatsByType(schedules, \"mom\")\n  return allData.filter(item => item.player == player_id)\n}\nexports.getPlayerMom = getPlayerMom\n\nfunction getPlayerSaves(schedules, player_id) {\n  const allData = getAllGameStatsByType(schedules, \"keeper\")\n  return allData.filter(item => item.player == player_id)\n}\nexports.getPlayerSaves = getPlayerSaves\n\nfunction getPlayerReferees(schedules, player_id) {\n  const allData = getReferees(schedules)\n  return allData.filter(item => item.player == player_id)\n}\nexports.getPlayerReferees = getPlayerReferees\n","const { predicate } = require(\"../lib/utility\")\nfunction getSeasonTeams(seasonItem) {\n  const teams = seasonItem.teams\n    .map(item => {\n      item.teamName = item.team.teamName\n      item.players.map(newitem => {\n        newitem.isOwner = +!!item.owners.find(\n          owner => owner.player_id == newitem.player_id\n        )\n        newitem.isMos = +!!seasonItem.mos.find(\n          mos => mos.player_id == newitem.player_id\n        )\n        return newitem\n      })\n      item.players = item.players.sort(\n        predicate(\n          {\n            name: \"isOwner\",\n            reverse: true,\n          },\n          {\n            name: \"isMos\",\n            reverse: true,\n          },\n          {\n            name: \"name\",\n            reverse: false,\n          }\n        )\n      )\n      return item\n    })\n    .sort(\n      predicate({\n        name: \"teamName\",\n        reverse: false,\n      })\n    )\n  return teams\n}\n\nexports.getSeasonTeams = getSeasonTeams\n","const { getTotalChildArr } = require(\"../lib/utility\")\nconst { grouByPlayerStats, grouByPlayerStatsSum } = require(\"./player-stats\")\nconst { getTotalCautionType } = require(\"./caution-stats\")\nconst { getAllGameStatsByType } = require(\"./stats-by-type\")\nconst { getTeamSeasonFoulStats } = require(\"./foul-stats\")\nconst { getTeamSeasonStats } = require(\"./team-season-stats\")\nconst { Cautions } = require(\"../lib/enum\")\n\nfunction getSeasonStats(seasons) {\n  const seasonArr = seasons.map(season => {\n    const totalGoals = getAllGameStatsByType(season.schedules, \"goals\")\n    const totalMom = getAllGameStatsByType(season.schedules, \"mom\")\n    const totalPlayers = getTotalChildArr(season.teams, \"players\")\n    const totalAssists = totalGoals.filter(item => item.assist)\n    const totalOwnGoals = totalGoals.filter(item => item.owngoal)\n    const totalValidGoals = totalGoals.filter(item => !item.owngoal)\n    const totalFouls = getAllGameStatsByType(season.schedules, \"fouls\")\n\n    const totalSaves = getAllGameStatsByType(season.schedules, \"keeper\")\n    // console.log(season.schedules, \"---season.schedules--\")\n\n    const momPlayers = grouByPlayerStats(totalMom)\n\n    const playersSaves = grouByPlayerStatsSum(totalSaves, \"saves\")\n\n    const totalUniquePlayerGoals = [\n      ...new Set(totalValidGoals.map(item => item.player.player_id)),\n    ]\n    const totalYellowCards = getTotalCautionType(\n      season.schedules,\n      Cautions.YELLOW\n    )\n    const teamStandingStats = getTeamSeasonStats(season.schedules, season.teams)\n    const teamFoulStats = getTeamSeasonFoulStats(season.schedules)\n\n    const totalFoulsCount = totalFouls.reduce((a, b) => a + b, 0)\n    const totalRedCards = getTotalCautionType(season.schedules, Cautions.RED)\n    const playerYellowCards = grouByPlayerStats(totalYellowCards)\n    const playerRedCards = grouByPlayerStats(totalRedCards)\n\n    const playersScoredSort = grouByPlayerStats(totalValidGoals)\n    season.seasonStats = {\n      games: season.schedules.length,\n      teams: season.teams.length,\n      goals: totalGoals.length,\n      assists: totalAssists.length,\n      players: totalPlayers,\n      owngoals: totalOwnGoals.length,\n      yellow_cards: totalYellowCards.length,\n      red_cards: totalRedCards.length,\n      unique_players_goals: totalUniquePlayerGoals.length,\n      unique_players_goals_list: totalUniquePlayerGoals,\n      fouls: totalFoulsCount,\n      scorers: playersScoredSort,\n      moms: momPlayers,\n      goalkeepers: playersSaves,\n      yellow_card_holders: playerYellowCards,\n      red_card_holders: playerRedCards,\n      team_standing_stats: teamStandingStats,\n      team_foul_stats: teamFoulStats,\n    }\n    return season\n  })\n  return seasonArr\n}\n\nexports.getSeasonStats = getSeasonStats\n","const { groupBy, predicate, getSum } = require(\"../lib/utility\")\n\nfunction getTeamSeasonFoulStats(schedules) {\n  const teamList = schedules\n    .map(item => item.gamestats)\n    .flat()\n    .map(item => {\n      item.team_id = item.team.team_id\n      return item\n    })\n  const groupTeam = groupBy(teamList, \"team_id\")\n  const teamListArr = Object.values(groupTeam)\n  const mappedData = teamListArr.map(item => {\n    const newitem = {}\n    const teamItem = item[0].team\n    const totalFouls = getSum(item, \"fouls\")\n    const matches = item.length\n    newitem.team = teamItem\n    newitem.teamName = teamItem.teamName\n    newitem.fouls = totalFouls\n    newitem.foulAvg = (totalFouls / matches).toFixed(2)\n    newitem.matches = matches\n    newitem.items = item\n    return newitem\n  })\n  mappedData.sort(\n    predicate(\n      {\n        name: \"fouls\",\n        reverse: false,\n      },\n      {\n        name: \"teamName\",\n        reverse: false,\n      }\n    )\n  )\n  return mappedData\n}\n\nexports.getTeamSeasonFoulStats = getTeamSeasonFoulStats\n","const { DEFUAULT_SCORES } = require(\"../lib/enum\")\nconst { predicate, getDefaultScore } = require(\"../lib/utility\")\n\nfunction getTeamSeasonStats(schedules, teams) {\n  var teamObj = {}\n  // Set default object for each team\n  teams.forEach(item => {\n    teamObj[item.team.team_id] = getDefaultScore()\n    teamObj[item.team.team_id].team = item.team\n  })\n  schedules.forEach(itemobj => {\n    const home = itemobj.home\n    const away = itemobj.away\n    const homeTeamId = home?.team?.team_id\n    const awayTeamId = away?.team?.team_id\n\n    // if game is completed\n    if (itemobj.completed) {\n      teamObj[homeTeamId].played += 1\n      teamObj[awayTeamId].played += 1\n\n      if (home.goals.length == away.goals.length) {\n        teamObj[homeTeamId].draw += 1\n        teamObj[awayTeamId].draw += 1\n      } else if (home.goals.length > away.goals.length) {\n        teamObj[homeTeamId].won += 1\n        teamObj[awayTeamId].lost += 1\n      } else if (away.goals.length > home.goals.length) {\n        teamObj[awayTeamId].won += 1\n        teamObj[homeTeamId].lost += 1\n      }\n      teamObj[homeTeamId].goal_allowed += away.goals.length\n      teamObj[awayTeamId].goal_allowed += home.goals.length\n\n      teamObj[homeTeamId].goal_scored += home.goals.length\n      teamObj[awayTeamId].goal_scored += away.goals.length\n    }\n  })\n  teamObj = Object.values(teamObj)\n  teamObj = teamObj.map(itemobj => {\n    itemobj.goal_diff = itemobj.goal_scored - itemobj.goal_allowed\n    itemobj.points = itemobj.draw * 1 + itemobj.won * 3\n    return itemobj\n  })\n  teamObj.sort(\n    predicate(\n      {\n        name: \"points\",\n        reverse: true,\n      },\n      {\n        name: \"goal_diff\",\n        reverse: true,\n      },\n      {\n        name: \"goal_scored\",\n        reverse: true,\n      },\n      {\n        name: \"teamName\",\n        reverse: false,\n      }\n    )\n  )\n  return Object.values(teamObj)\n}\n\nexports.getTeamSeasonStats = getTeamSeasonStats\n\nfunction getTeamStandings(schedules, teams) {\n  var teamObj = {}\n  teams.forEach(item => {\n    teamObj[item] = getDefaultScore()\n  })\n  schedules.forEach(itemobj => {\n    const home = itemobj.gamestats.find(\n      gameitem => gameitem.team_type == \"home\"\n    )\n    const away = itemobj.gamestats.find(\n      gameitem => gameitem.team_type == \"away\"\n    )\n    const homeTeamId = home?.team\n    const awayTeamId = away?.team\n\n    // if game is completed\n    if (itemobj.completed) {\n      teamObj[homeTeamId].played += 1\n      teamObj[awayTeamId].played += 1\n\n      if (home.goals.length == away.goals.length) {\n        teamObj[homeTeamId].draw += 1\n        teamObj[awayTeamId].draw += 1\n      } else if (home.goals.length > away.goals.length) {\n        teamObj[homeTeamId].won += 1\n        teamObj[awayTeamId].lost += 1\n      } else if (away.goals.length > home.goals.length) {\n        teamObj[awayTeamId].won += 1\n        teamObj[homeTeamId].lost += 1\n      }\n      teamObj[homeTeamId].goal_allowed += away.goals.length\n      teamObj[awayTeamId].goal_allowed += home.goals.length\n\n      teamObj[homeTeamId].goal_scored += home.goals.length\n      teamObj[awayTeamId].goal_scored += away.goals.length\n    }\n  })\n  return teamObj\n}\n\nexports.getTeamStandings = getTeamStandings\n","import { Link } from \"gatsby\"\nimport React from \"react\"\nimport MslTotalStatsItem from \"components/msl/player/total-stats-item\"\n\nconst MslSeasonStatsItem = ({ season }) => {\n  return (\n    <div className=\"lg:flex lg:items-center lg:justify-between px-5\">\n      <div className=\"flex-1 min-w-0\">\n        <h1 className=\"text-2xl font-bold leading-7  sm:text-3xl sm:truncate\">\n          <Link\n            to={season.seasonPath}\n            className=\"text-dark-600 dark:text-dark-300 hover:text-light-800 dark:hover:text-dark-100\"\n          >\n            Season {season.season_id} ({season.season_year}) &rarr;\n          </Link>\n        </h1>\n        <div className=\"mt-4\">\n          <Link\n            to={season.fixturePath}\n            className=\"text-base font-medium  text-light-800 dark:text-dark-200 hover:text-dark-800 dark:hover:text-dark-100\"\n          >\n            Fixtures &rarr;\n          </Link>\n        </div>\n        <div className=\"mt-3 grid grid-cols-2 md:grid-cols-4 lg:grid-cols-5 xl:grid-cols-8 gap-4\">\n          <MslTotalStatsItem\n            title={`Games`}\n            value={season.seasonStats.games}\n          ></MslTotalStatsItem>\n          <MslTotalStatsItem\n            title={`Teams`}\n            value={season.seasonStats.teams}\n          ></MslTotalStatsItem>\n          <MslTotalStatsItem\n            title={`Players`}\n            value={season.seasonStats.players}\n          ></MslTotalStatsItem>\n          <MslTotalStatsItem\n            title={`Goals`}\n            value={season.seasonStats.goals}\n          ></MslTotalStatsItem>\n          <MslTotalStatsItem\n            title={`Fouls`}\n            value={season.seasonStats.fouls}\n          ></MslTotalStatsItem>\n          <MslTotalStatsItem\n            title={`Own Goals`}\n            value={season.seasonStats.owngoals}\n          ></MslTotalStatsItem>\n          <MslTotalStatsItem\n            title={`Assists`}\n            value={season.seasonStats.assists}\n          ></MslTotalStatsItem>\n          <MslTotalStatsItem\n            title={`Players Scored`}\n            value={season.seasonStats.unique_players_goals}\n          ></MslTotalStatsItem>\n          <MslTotalStatsItem\n            title={`Yellow Cards`}\n            value={season.seasonStats.yellow_cards}\n          ></MslTotalStatsItem>\n          <MslTotalStatsItem\n            title={`Red Cards`}\n            value={season.seasonStats.red_cards}\n          ></MslTotalStatsItem>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default MslSeasonStatsItem\n","const { getAllGameStatsByType } = require(\"./stats-by-type\")\n\nfunction getTotalCautionType(schedules, cautionType = 1) {\n  const allStats = getAllGameStatsByType(schedules, \"cautions\").filter(\n    item => item && item.caution_id == cautionType\n  )\n  return allStats\n}\nexports.getTotalCautionType = getTotalCautionType\n","const { getSeasonStats } = require(\"../models/season-stats\")\nconst { getSeasonTeams } = require(\"../models/season-teams\")\nconst {\n  getPlayerGoals,\n  getPlayerAssists,\n  getPlayerCautions,\n  getPlayerMom,\n  getPlayerSaves,\n  getPlayerReferees,\n} = require(\"../models/player-stats\")\n\nconst {\n  getTeamGoals,\n  getTeamAssists,\n  getTeamCautions,\n  getTeamMom,\n  getTeamSaves,\n} = require(\"../models/team-stats\")\n/**\n * Generic Function to get file info based on relative path\n * @param context\n * @param path\n * @returns {*}\n */\nfunction getFile(context, path) {\n  const data = context.nodeModel.getAllNodes({ type: `File` })\n  const record = data.find(item => item.relativePath == path)\n  return record\n}\nexports.getFile = getFile\n\nfunction getCurrentSeason(context) {\n  // If queried in context of season\n  const rootNodes = context.nodeModel.nodeModel._trackedRootNodes\n  const seasons = context.nodeModel.getAllNodes({ type: `MslSeasonsJson` })\n  const seasonIdArr = seasons.map(item => item.id)\n  const nodeArr = [...rootNodes]\n  const currSeasonId = nodeArr.find(item => seasonIdArr.includes(item))\n  const season = context.nodeModel.getNodeById({\n    id: currSeasonId,\n  })\n  return season\n}\n\nexports.getCurrentSeason = getCurrentSeason\n\nexports.getPlayerGoals = getPlayerGoals\n\nexports.getPlayerAssists = getPlayerAssists\n\nexports.getPlayerCautions = getPlayerCautions\n\nexports.getPlayerMom = getPlayerMom\n\nexports.getPlayerSaves = getPlayerSaves\n\nexports.getSeasonStats = getSeasonStats\n\nexports.getSeasonTeams = getSeasonTeams\n\nexports.getTeamGoals = getTeamGoals\n\nexports.getTeamAssists = getTeamAssists\n\nexports.getTeamCautions = getTeamCautions\n\nexports.getTeamMom = getTeamMom\n\nexports.getTeamSaves = getTeamSaves\n\nexports.getPlayerReferees = getPlayerReferees\n","function getAllGameStatsByType(schedules, key) {\n  const allStats = schedules\n    .map(item => item.gamestats)\n    .flat()\n    .map(item =>\n      item[key] && Array.isArray(item[key])\n        ? item[key].map(childitem => {\n            childitem.team = item.team\n            return childitem\n          })\n        : item[key]\n    )\n    .flat()\n    .filter(item => item)\n  return allStats\n}\n\nexports.getAllGameStatsByType = getAllGameStatsByType\n\nfunction getReferees(schedules) {\n  const allData = schedules.map(item => item.referees).flat()\n  return allData\n}\nexports.getReferees = getReferees\n","const { getAllGameStatsByType } = require(\"./stats-by-type\")\nconst { getTotalCautionType } = require(\"./caution-stats\")\n\nfunction getTeamGoals(schedules, teamId) {\n  const allData = getAllGameStatsByType(schedules, \"goals\")\n  return allData.filter(item => !item.owngoal && item.team == teamId)\n}\nexports.getTeamGoals = getTeamGoals\n\nfunction getTeamAssists(schedules, teamId) {\n  const allData = getAllGameStatsByType(schedules, \"goals\")\n  return allData.filter(item => item.assist && item.team == teamId)\n}\nexports.getTeamAssists = getTeamAssists\n\nfunction getTeamCautions(schedules, teamId, caution_type) {\n  const allData = getTotalCautionType(schedules, caution_type)\n  return allData.filter(item => item.team == teamId)\n}\nexports.getTeamCautions = getTeamCautions\n\nfunction getTeamMom(schedules, teamId) {\n  const allData = getAllGameStatsByType(schedules, \"mom\")\n  return allData.filter(item => item.team == teamId)\n}\nexports.getTeamMom = getTeamMom\n\nfunction getTeamSaves(schedules, teamId) {\n  const allData = getAllGameStatsByType(schedules, \"keeper\")\n  return allData.filter(item => item.team == teamId)\n}\nexports.getTeamSaves = getTeamSaves\n","exports.MslImgKey = {\n  PLAYER: \"players\",\n  TEAM: \"teams\",\n}\nexports.Cautions = {\n  YELLOW: 1,\n  RED: 2,\n}\n\nexports.SCHEMA_TYPE_NAME = {\n  MslSeasonsJson: \"MslSeasonsJson\",\n  MslSchedulesJson: \"MslSchedulesJson\",\n  MslTeamsJson: \"MslTeamsJson\",\n  MslPlayersJson: \"MslPlayersJson\",\n}\n\nexports.DEFUAULT_SCORES = {\n  played: 0,\n  won: 0,\n  lost: 0,\n  draw: 0,\n  goal_allowed: 0,\n  goal_scored: 0,\n}\n\nexports.FIELD_NAMES = {\n  PLAYER_ID: \"player_id\",\n  PLAYER_MOS: \"isMos\",\n  PLAYER_OWNER: \"isOwner\",\n}\n"],"sourceRoot":""}