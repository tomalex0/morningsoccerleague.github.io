{"version":3,"sources":["webpack:///./src/components/msl/player/player-item.js","webpack:///./src/components/msl/player/total-stats-item.js","webpack:///./src/pages/players/index.js","webpack:///./src/components/msl/player/player-stats-item.js"],"names":["MslPlayerItem","player","fontSize","imageWidth","imageHeight","playerNameCss","showImage","playerInitials","getInitials","name","className","to","playerPath","icon","xmlns","fill","viewBox","stroke","aria-hidden","strokeLinecap","strokeLinejoin","strokeWidth","d","MslTotalStatsItem","title","value","children","query","PlayersIndex","data","path","players","playersFormatted","nodes","map","item","playerStats","allseasonStats","playerList","setPlayerList","useState","searchQuery","setSearchQuery","sortState","setSortState","orderState","setOrderState","useEffect","searchFilter","sortKey","sortOrder","filteredData","filter","toLowerCase","includes","slice","sort","predicate","reverse","Boolean","parseInt","width","height","fill-rule","clip-rule","type","aria-label","placeholder","onChange","e","s","target","id","autoComplete","length","key","player_id","stats","MslPlayerStatsItem","allSeasonStats","goals","mom","mos","assists","saves","referees","yellow_cards","red_cards"],"mappings":"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","file":"component---src-pages-players-index-js-f178fbc942345114f1f2.js","sourcesContent":["import { Link } from \"gatsby\"\nimport React from \"react\"\nimport { getInitials } from \"graphql/lib/utility\"\n\nconst MslPlayerItem = ({\n  player,\n  fontSize = \"text-sm\",\n  imageWidth = \"w-10\",\n  imageHeight = \"h-10\",\n  playerNameCss = \"font-medium text-dark-600 dark:text-dark-900\",\n  showImage = false,\n}) => {\n  const playerInitials = getInitials(player?.name)\n  return (\n    <div className=\"flex items-center\">\n      {showImage && (\n        <div className={`flex-shrink-0 mr-2 ${imageWidth} ${imageHeight}`}>\n          {/*<img*/}\n          {/*  className={`${imageWidth} ${imageHeight} rounded-full`}*/}\n          {/*  src={MslLogo}*/}\n          {/*  alt=\"\"*/}\n          {/*/>*/}\n          <div\n            className={`${imageWidth} ${imageHeight} rounded-full flex items-center justify-center bg-light-800 dark:bg-dark-300 text-dark_alt dark:text-dark-900 uppercase`}\n          >\n            {playerInitials}\n          </div>\n        </div>\n      )}\n      <div>\n        <div className={`${fontSize} ${playerNameCss}`}>\n          {player && <Link to={player?.playerPath}>{player?.name} &rarr;</Link>}\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default MslPlayerItem\n","import React from \"react\"\nconst icon = (\n  <svg\n    className=\"flex-shrink-0 h-6 w-6 text-light-800 dark:text-dark-300\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n    fill=\"none\"\n    viewBox=\"0 0 24 24\"\n    stroke=\"currentColor\"\n    aria-hidden=\"true\"\n  >\n    <path\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth={2}\n      d=\"M9 19v-6a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2a2 2 0 002-2zm0 0V9a2 2 0 012-2h2a2 2 0 012 2v10m-6 0a2 2 0 002 2h2a2 2 0 002-2m0 0V5a2 2 0 012-2h2a2 2 0 012 2v14a2 2 0 01-2 2h-2a2 2 0 01-2-2z\"\n    />\n  </svg>\n)\nconst MslTotalStatsItem = ({ title, value, children = icon }) => {\n  return (\n    <div className=\"flex py-2 px-2 bg-dark_alt  dark:bg-dark-800  rounded-xl shadow-md items-center \">\n      <div>{children}</div>\n      <div className=\"ml-2 md:ml-4\">\n        <p className=\"text-base font-medium text-dark-900 dark:text-dark-300\">\n          {title}\n        </p>\n        <p className=\"mt-1 text-sm text-dark-500 dark:text-dark-400\">{value}</p>\n      </div>\n    </div>\n  )\n}\n\nexport default MslTotalStatsItem\n","import React, { useState, useEffect } from \"react\"\nimport { graphql } from \"gatsby\"\n\nimport Layout from \"components/layout\"\nimport SEO from \"components/seo\"\nimport MslPlayerStatsItem from \"components/msl/player/player-stats-item\"\nimport MslPlayerItem from \"components/msl/player/player-item\"\n\nimport { predicate } from \"graphql/lib/utility\"\n\nimport {\n  MslPlayersJsonFragment,\n  MslTeamsJsonFragment,\n  MslSeasonsJsonFragment,\n  MslPlayerStatsFragment,\n} from \"data/fragments\"\n\nconst PlayersIndex = ({ data, path }) => {\n  const { players } = data\n  const playersFormatted = players.nodes.map(item => ({\n    ...item,\n    ...item?.playerStats?.allseasonStats,\n  }))\n  const [playerList, setPlayerList] = useState(playersFormatted)\n  const [searchQuery, setSearchQuery] = useState(\"\")\n  const [sortState, setSortState] = useState(\"name\")\n  const [orderState, setOrderState] = useState(0)\n\n  useEffect(() => {\n    function searchFilter(query, sortKey, sortOrder) {\n      var filteredData = [...playersFormatted].filter(player => {\n        // destructure data from post frontmatter\n        const { name } = player\n        return (\n          // standardize data with .toLowerCase()\n          // return true if the description, title or tags\n          // contains the query string\n          name.toLowerCase().includes(query.toLowerCase())\n        )\n      })\n\n      filteredData = filteredData.slice().sort(\n        predicate({\n          name: `${sortKey}`,\n          reverse: Boolean(parseInt(sortOrder)),\n        })\n      )\n\n      setPlayerList(filteredData)\n    }\n\n    searchFilter(searchQuery, sortState, orderState)\n  }, [searchQuery, sortState, orderState])\n\n  return (\n    <Layout>\n      <SEO title=\"Players\" path={path} />\n      <div className=\"mt-5 px-5 divide-y divide-dark-300\">\n        <div className=\"mb-3 text-center\">\n          <form className=\"flex w-full max-w-lg mx-auto space-l-0 space-x-2 relative\">\n            <div className=\"flex-1 \">\n              <svg\n                width=\"20\"\n                height=\"20\"\n                fill=\"currentColor\"\n                className=\"absolute left-2 top-1/2 transform -translate-y-1/2 text-dark-400\"\n              >\n                <path\n                  fill-rule=\"evenodd\"\n                  clip-rule=\"evenodd\"\n                  d=\"M8 4a4 4 0 100 8 4 4 0 000-8zM2 8a6 6 0 1110.89 3.476l4.817 4.817a1 1 0 01-1.414 1.414l-4.816-4.816A6 6 0 012 8z\"\n                />\n              </svg>\n              <input\n                type=\"text\"\n                className=\"appearance-none focus:ring-2 focus:ring-light-800 dark:focus:ring-dark-800  focus:outline-none w-full text-sm text-black placeholder-dark-500 border border-dark-200 rounded-md py-2 pl-8 shadow-md bg-dark_alt\"\n                aria-label=\"Search\"\n                placeholder=\"Type to filter players...\"\n                onChange={e => setSearchQuery(e.target.value)}\n              />\n            </div>\n            <select\n              id=\"sortby\"\n              name=\"sortby\"\n              aria-label=\"Sort By\"\n              autoComplete=\"sortby\"\n              onChange={e => setSortState(e.target.value)}\n              className=\"flex-shrink-0 py-2 px-2 rounded-md shadow-md w-24 focus:ring-2 focus:ring-light-800 dark:focus:ring-dark-800 focus:outline-none text-sm text-black placeholder-dark-500 border border-dark-200 bg-dark_alt\"\n            >\n              <option value=\"name\">Sort By</option>\n              <option value=\"name\">Name</option>\n              <option value=\"goals\">Goals</option>\n              <option value=\"assists\">Assists</option>\n              <option value=\"mos\">Mos</option>\n              <option value=\"yellow_cards\">Yellow Cards</option>\n              <option value=\"red_cards\">Red Cards</option>\n              <option value=\"mom\">Mom</option>\n              <option value=\"saves\">Saves</option>\n              <option value=\"referees\">Referee</option>\n            </select>\n\n            <select\n              id=\"orderby\"\n              name=\"orderby\"\n              aria-label=\"Order By\"\n              autoComplete=\"orderby\"\n              onChange={e => setOrderState(e.target.value)}\n              className=\"flex-shrink-0 py-2 px-2 rounded-md shadow-md w-18 focus:ring-2 focus:ring-light-800 dark:focus:ring-dark-800 focus:outline-none text-sm text-black placeholder-dark-500 border border-dark-200 bg-dark_alt\"\n            >\n              <option value=\"0\">ASC</option>\n              <option value=\"1\">DESC</option>\n            </select>\n          </form>\n          <div className=\"mt-2 text-dark-600 dark:text-dark-300 text-left\">\n            {playerList.length} Results\n          </div>\n        </div>\n        <div>\n          {playerList.length > 0 &&\n            playerList.map(player => (\n              <div className=\"mb-7 pt-5\" key={player.player_id}>\n                <MslPlayerItem\n                  player={player}\n                  fontSize=\"text-md md:text-lg\"\n                  playerNameCss=\"font-medium text-dark-600 dark:text-dark-300\"\n                  imageWidth=\"w-14\"\n                  imageHeight=\"h-14\"\n                  showImage={true}\n                />\n                <div>\n                  <MslPlayerStatsItem\n                    stats={player?.playerStats?.allseasonStats}\n                  />\n                </div>\n              </div>\n            ))}\n        </div>\n        <div>\n          {playerList.length <= 0 && (\n            <div className=\"text-center p-4 text-dark_alt text-xl\">\n              Player Not Found\n            </div>\n          )}\n        </div>\n      </div>\n    </Layout>\n  )\n}\n\nexport const query = graphql`\n  query {\n    players: allMslPlayersJson(\n      sort: { fields: name, order: ASC } # filter: { player_id: { in: [1, 45, 54, 2] } }\n    ) {\n      nodes {\n        ...MslPlayersJsonFragment\n        playerStats {\n          ...MslPlayerStatsFragment\n        }\n        seasons {\n          ...MslSeasonsJsonFragment\n        }\n      }\n    }\n  }\n`\n\nexport default PlayersIndex\n","import React from \"react\"\nimport MslTotalStatsItem from \"components/msl/player/total-stats-item\"\n\nconst MslPlayerStatsItem = ({ stats }) => {\n  const allSeasonStats = stats\n  return (\n    <div className=\"mt-4 grid grid-cols-3 md:grid-cols-5 lg:grid-cols-7 xl:grid-cols-9 gap-4\">\n      <MslTotalStatsItem\n        title={`Goals`}\n        value={allSeasonStats.goals}\n      ></MslTotalStatsItem>\n      <MslTotalStatsItem\n        title={`Mom`}\n        value={allSeasonStats.mom}\n      ></MslTotalStatsItem>\n      <MslTotalStatsItem\n        title={`Mos`}\n        value={allSeasonStats.mos}\n      ></MslTotalStatsItem>\n      <MslTotalStatsItem\n        title={`Assists`}\n        value={allSeasonStats.assists}\n      ></MslTotalStatsItem>\n      <MslTotalStatsItem\n        title={`Saves`}\n        value={allSeasonStats.saves}\n      ></MslTotalStatsItem>\n      <MslTotalStatsItem\n        title={`Referee`}\n        value={allSeasonStats.referees}\n      ></MslTotalStatsItem>\n      <MslTotalStatsItem\n        title={`Yellow Cards`}\n        value={allSeasonStats.yellow_cards}\n      ></MslTotalStatsItem>\n      <MslTotalStatsItem\n        title={`Red Cards`}\n        value={allSeasonStats.red_cards}\n      ></MslTotalStatsItem>\n    </div>\n  )\n}\n\nexport default MslPlayerStatsItem\n"],"sourceRoot":""}