{"version":3,"sources":["webpack:///./src/pages/seasons/{MslSeasonsJson.season_id}-{MslSeasonsJson.season_year}/fixtures.js","webpack:///./src/components/image.js"],"names":["FixturesIndexPage","props","fixtures","data","path","pageContext","title","season_id","season_year","style","maxWidth","marginBottom","nodes","map","fixture","key","schedule_id","scheduled_date","Image","useStaticQuery","imageData","getImage","placeholderImage","image","alt"],"mappings":"4FAAA,0FA4DeA,UAhDW,SAApBA,kBAAoBC,GAAU,IAC1BC,EAAaD,EAAME,KAAnBD,SACFE,EAAOH,EAAMG,KACbC,EAAcJ,EAAMI,YAE1B,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CACEC,MAAK,YAAcD,EAAYE,UAA1B,IAAuCF,EAAYG,YACxDJ,KAAMA,IAER,2CACeC,EAAYE,UAD3B,IACuCF,EAAYG,aAEnD,yBAAKC,MAAO,CAAEC,SAAS,QAAUC,aAAa,YAC5C,kBAAC,IAAD,OAEF,4BACGT,EAASU,MAAMC,KAAI,SAAAC,GAAO,OACzB,wBAAIC,IAAKD,EAAQE,aACdF,EAAQG,eADX,IAC4BH,EAAQE,oB,uDChC9C,iDAiCeE,IAlBD,SAARA,QACJ,IAAMf,EAAOgB,yBAAe,cAStBC,EAAYC,YAASlB,EAAKmB,kBAChC,OAAKF,EAIE,kBAAC,IAAD,CAAaG,MAAOH,EAAWI,IAAK,cAHlC","file":"component---src-pages-seasons-msl-seasons-json-season-id-msl-seasons-json-season-year-fixtures-js-74358c27d861bdc1752f.js","sourcesContent":["import React from \"react\"\nimport { Link, graphql } from \"gatsby\"\n\nimport Layout from \"components/layout\"\nimport Image from \"components/image\"\nimport SEO from \"components/seo\"\nimport {\n  MslPlayersJsonFragment,\n  MslTeamsJsonFragment,\n  MslSeasonsJsonFragment,\n} from \"data/fragments\"\n\nconst FixturesIndexPage = props => {\n  const { fixtures } = props.data\n  const path = props.path\n  const pageContext = props.pageContext\n\n  return (\n    <Layout>\n      <SEO\n        title={`Fixtures ${pageContext.season_id}-${pageContext.season_year}`}\n        path={path}\n      />\n      <h1>\n        Hi Fixtures {pageContext.season_id}-{pageContext.season_year}\n      </h1>\n      <div style={{ maxWidth: `300px`, marginBottom: `1.45rem` }}>\n        <Image />\n      </div>\n      <ul>\n        {fixtures.nodes.map(fixture => (\n          <li key={fixture.schedule_id}>\n            {fixture.scheduled_date}-{fixture.schedule_id}\n          </li>\n        ))}\n      </ul>\n    </Layout>\n  )\n}\n\nexport const query = graphql`\n  query($season_id: Int) {\n    fixtures: allMslSchedulesJson(\n      filter: { season: { season_id: { eq: $season_id } } }\n      sort: { fields: schedule_id, order: ASC }\n    ) {\n      nodes {\n        scheduled_time\n        scheduled_date\n        schedule_id\n        completed\n        end_time\n        season {\n          ...MslSeasonsJsonFragment\n        }\n      }\n    }\n  }\n`\n\nexport default FixturesIndexPage\n","import React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n// import Img from \"gatsby-image\"\nimport { GatsbyImage, getImage } from \"gatsby-plugin-image\"\n/*\n * This component is built using `gatsby-image` to automatically serve optimized\n * images with lazy loading and reduced file sizes. The image is loaded using a\n * `useStaticQuery`, which allows us to load the image from directly within this\n * component, rather than having to pass the image data down from pages.\n *\n * For more information, see the docs:\n * - `gatsby-image`: https://gatsby.dev/gatsby-image\n * - `useStaticQuery`: https://www.gatsbyjs.com/docs/use-static-query/\n */\n\nconst Image = () => {\n  const data = useStaticQuery(graphql`\n    query {\n      placeholderImage: file(relativePath: { eq: \"gatsby-astronaut.png\" }) {\n        childImageSharp {\n          gatsbyImageData(maxWidth: 300, layout: FLUID, placeholder: TRACED_SVG)\n        }\n      }\n    }\n  `)\n  const imageData = getImage(data.placeholderImage)\n  if (!imageData) {\n    return <div>Picture not found</div>\n  }\n\n  return <GatsbyImage image={imageData} alt={\"Astronaut\"} />\n}\n\nexport default Image\n"],"sourceRoot":""}