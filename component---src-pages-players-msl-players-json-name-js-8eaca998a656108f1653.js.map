{"version":3,"sources":["webpack:///./src/pages/players/{MslPlayersJson.name}.js","webpack:///./src/components/msl/player-stats-item.js"],"names":["Player","data","path","player","title","name","player_id","playerStats","seasonStats","map","item","key","season","season_id","to","seasonPath","season_year","isOwner","goals","team","teamName","assists","yellow_cards","red_cards","mom","saves","isMos","MslPlayerStatsItem","playerPath","allseasonStats","mos"],"mappings":"8FAAA,0FA0DeA,UA5Cf,SAASA,OAAT,GAAiC,IAAfC,EAAc,EAAdA,KAAMC,EAAQ,EAARA,KACdC,EAAWF,EAAXE,OACR,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKC,MAAOD,EAAOE,KAAMH,KAAMA,IAC/B,yCACaC,EAAOE,KADpB,MAC6BF,EAAOG,WAEpC,6BACE,kBAAC,IAAD,CAAoBH,OAAQA,KAE9B,4BACGA,EAAOI,YAAYC,YAAYC,KAAI,SAAAC,GAAI,OACtC,wBAAIC,IAAKD,EAAKE,OAAOC,WACnB,kBAAC,OAAD,CAAMC,GAAIJ,EAAKE,OAAOG,YACnBL,EAAKE,OAAOC,UADf,IAC2BH,EAAKE,OAAOI,aAEtCN,EAAKO,SAAW,0CACjB,oCAAUP,EAAKQ,MAAf,UACA,oCAAUR,EAAKS,KAAKC,SAApB,SACA,oCAAUV,EAAKW,QAAf,WACA,oCAAUX,EAAKY,aAAf,WACA,oCAAUZ,EAAKa,UAAf,QACA,oCAAUb,EAAKc,IAAf,QACA,oCAAUd,EAAKe,MAAf,UACCf,EAAKgB,OAAS,gD,uDCvC3B,qCAsBeC,IAnBY,SAArBA,mBAAsB,GAAgB,IAAdxB,EAAa,EAAbA,OAC5B,OACE,wBAAIQ,IAAKR,EAAOE,MACd,kBAAC,OAAD,CAAMS,GAAIX,EAAOyB,YACdzB,EAAOG,UADV,MACwBH,EAAOE,MAE/B,8BACGF,EAAOI,YAAYsB,eAAeX,MADrC,mBAEGf,EAAOI,YAAYsB,eAAeR,QAFrC,oBAGGlB,EAAOI,YAAYsB,eAAeC,IAHrC,gBAIG3B,EAAOI,YAAYsB,eAAeP,aAJrC,mBAKGnB,EAAOI,YAAYsB,eAAeN,UALrC,gBAMGpB,EAAOI,YAAYsB,eAAeL,IANrC,gBAOGrB,EAAOI,YAAYsB,eAAeJ,MAPrC","file":"component---src-pages-players-msl-players-json-name-js-8eaca998a656108f1653.js","sourcesContent":["import React from \"react\"\nimport { graphql, Link } from \"gatsby\"\n\nimport Layout from \"components/layout\"\nimport SEO from \"components/seo\"\nimport MslPlayerStatsItem from \"components/msl/player-stats-item\"\n\nimport {\n  MslPlayersJsonFragment,\n  MslTeamsJsonFragment,\n  MslSeasonsJsonFragment,\n  MslPlayerStatsFragment\n} from \"data/fragments\"\n\nfunction Player({ data, path }) {\n  const { player } = data\n  return (\n    <Layout>\n      <SEO title={player.name} path={path} />\n      <h1>\n        Hi Player {player.name} - {player.player_id}\n      </h1>\n      <div>\n        <MslPlayerStatsItem player={player} />\n      </div>\n      <ul>\n        {player.playerStats.seasonStats.map(item => (\n          <li key={item.season.season_id}>\n            <Link to={item.season.seasonPath}>\n              {item.season.season_id}-{item.season.season_year}\n            </Link>\n            {item.isOwner && <span>---Owner</span>}\n            <span>---{item.goals} Goals</span>\n            <span>---{item.team.teamName} Team</span>\n            <span>---{item.assists} Assist</span>\n            <span>---{item.yellow_cards} Yellow</span>\n            <span>---{item.red_cards} Red</span>\n            <span>---{item.mom} Mom</span>\n            <span>---{item.saves} Saves</span>\n            {item.isMos && <span>---Mos</span>}\n          </li>\n        ))}\n      </ul>\n    </Layout>\n  )\n}\n\nexport const query = graphql`\n  query($id: String) {\n    player: mslPlayersJson(id: { eq: $id }) {\n      ...MslPlayersJsonFragment\n      playerStats {\n        ...MslPlayerStatsFragment\n      }\n    }\n  }\n`\n\nexport default Player\n","import { Link } from \"gatsby\"\nimport React from \"react\"\n\nconst MslPlayerStatsItem = ({ player }) => {\n  return (\n    <li key={player.name}>\n      <Link to={player.playerPath}>\n        {player.player_id} - {player.name}\n      </Link>\n      <span>\n        {player.playerStats.allseasonStats.goals} Total Goals ---\n        {player.playerStats.allseasonStats.assists} Total Assists---\n        {player.playerStats.allseasonStats.mos} Total Mos---\n        {player.playerStats.allseasonStats.yellow_cards} Total Yellow --\n        {player.playerStats.allseasonStats.red_cards} Total Red --\n        {player.playerStats.allseasonStats.mom} Total Mom --\n        {player.playerStats.allseasonStats.saves} Total Saves --\n      </span>\n    </li>\n  )\n}\n\nexport default MslPlayerStatsItem\n"],"sourceRoot":""}